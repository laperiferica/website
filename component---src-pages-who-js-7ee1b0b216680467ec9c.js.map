{"version":3,"sources":["webpack:///./src/components/BiLink.jsx","webpack:///./src/components/MarkedHeading.jsx","webpack:///./src/components/Team/Item.jsx","webpack:///./src/components/Team/Team.jsx","webpack:///./src/components/Team/index.js","webpack:///./src/pages/who.js","webpack:///./src/components/Anchor.jsx","webpack:///./src/components/Section.jsx"],"names":["BiLink","url","children","startsWith","href","target","rel","to","StyledMarkedHeading","styled","h2","props","color","bg","MarkerHeading","defaultProps","StyledItem","li","Item","uri","image","name","tasks","fixed","alt","map","x","idx","key","StyledTeam","div","Team","items","pageQuery","injectIntl","data","intl","Layout","SEO","title","formatMessage","id","Section","dangerouslySetInnerHTML","__html","text","html","team","edges","node","frontmatter","slug","childImageSharp","email","StyledAnchor","a","Anchor","StyledSection","section"],"mappings":"2IAkBeA,IAdA,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAR,OACbD,EAAIE,WAAW,QACb,uBAAGC,KAAMH,EAAKI,OAAQ,SAAUC,IAAK,uBAClCJ,GAGH,kBAAC,OAAD,CAAMK,GAAIN,GAAMC,K,kCCVpB,yBAIMM,EAJN,UAI4BC,EAAOC,GAAV,yFAAGD,CAAH,sSAMd,SAACE,GAAD,OAAWA,EAAMC,SAWpB,SAACD,GAAD,sBAA2BA,EAAME,GAAjC,aACA,SAACF,GAAD,sBAA2BA,EAAME,GAAjC,aAMFC,EAAgB,SAAC,GAAD,IAAGZ,EAAH,EAAGA,SAAUW,EAAb,EAAaA,GAAID,EAAjB,EAAiBA,MAAjB,OACpB,kBAACJ,EAAD,CAAqBK,GAAIA,EAAID,MAAOA,GACjCV,IAULY,EAAcC,aAAe,CAC3BF,GAAI,SACJD,MAAO,SAGME,O,yOCtCTE,EAAaP,IAAOQ,GAAV,uEAAGR,CAAH,+kBA+EDS,EAvBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,MAArB,OACX,kBAACN,EAAD,KACE,kBAAChB,EAAA,EAAD,CAAQC,IAAKkB,GACX,kBAAC,IAAD,CAAaI,MAAOH,EAAOI,IAAG,WAAaH,IAC3C,4BAAKA,IAENC,GACC,4BACGA,EAAMG,KAAI,SAACC,EAAGC,GAAJ,OACT,wBAAIC,IAAKD,GAAMD,SClEnBG,EAAapB,IAAOqB,IAAV,mEAAGrB,CAAH,sSCLDsB,ED8BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,kBAACH,EAAD,KACE,4BACGG,EAAMP,KAAI,SAACC,EAAGC,GAAJ,OACT,kBAAC,EAAD,eAAMC,IAAKD,GAASD,UEOfO,GAFEC,gCA7BC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAOH,EAAKI,cAAc,CAAEC,GAAI,iBACrC,kBAACC,EAAA,EAAD,CAASD,GAAI,OAAQF,MAAOH,EAAKI,cAAc,CAAEC,GAAI,gBACnD,yBAAKE,wBAAyB,CAAEC,OAAQT,EAAKU,KAAKC,SAEpD,kBAAC,EAAD,CACEd,MAAOG,EAAKY,KAAKC,MAAMvB,KAAI,SAACC,GAAD,MAAQ,CACjCP,IAAI,aAAcO,EAAEuB,KAAKC,YAAYC,KACrC9B,KAAMK,EAAEuB,KAAKC,YAAY7B,KACzBD,MAAOM,EAAEuB,KAAKC,YAAY9B,MAAMgC,gBAAgB7B,MAChDD,MAAOI,EAAEuB,KAAKC,YAAY5B,MAC1B+B,MAAO3B,EAAEuB,KAAKC,YAAYG,gBAmBZ,e,uECtChBC,EAAe7C,IAAO8C,EAAV,0EAAG9C,CAAH,mEAaH+C,EANA,SAAC,GAAD,IAAGf,EAAH,EAAGA,GAAH,OAAY,kBAACa,EAAD,CAAcb,GAAIA,K,YCJvCgB,EAAgBhD,IAAOiD,QAAV,yEAAGjD,CAAH,2EA2BJiC,IAlBC,SAAC,GAAD,IAAGxC,EAAH,EAAGA,SAAUuC,EAAb,EAAaA,GAAIF,EAAjB,EAAiBA,MAAjB,OACd,kBAACkB,EAAD,KACE,kBAAC,EAAD,CAAQhB,GAAIA,IACXF,GACC,gCACE,kBAAC,IAAD,KAAgBA,IAGnBrC","file":"component---src-pages-who-js-7ee1b0b216680467ec9c.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby-plugin-intl';\n\nconst BiLink = ({ url, children }) =>\n  url.startsWith('http') ? (\n    <a href={url} target={'_blank'} rel={'noopener noreferrer'}>\n      {children}\n    </a>\n  ) : (\n    <Link to={url}>{children}</Link>\n  );\n\nBiLink.propTypes = {\n  url: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default BiLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledMarkedHeading = styled.h2`\n  display: inline-block;\n  position: relative;\n  padding: 0.5rem 0.6rem 0.1rem;\n  // TODO Avoid using important\n  margin-bottom: 3rem !important;\n  color: ${(props) => props.color};\n  &::before {\n    content: ' ';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: -1;\n    background-image: linear-gradient(\n      to right,\n      ${(props) => `var(--marked-${props.bg}-color)`} 0,\n      ${(props) => `var(--marked-${props.bg}-color)`} 100%\n    );\n    transform: rotate(0.4deg) skew(-10deg);\n  }\n`;\n\nconst MarkerHeading = ({ children, bg, color }) => (\n  <StyledMarkedHeading bg={bg} color={color}>\n    {children}\n  </StyledMarkedHeading>\n);\n\nMarkerHeading.propTypes = {\n  children: PropTypes.node,\n  bg: PropTypes.oneOf(['yellow', 'green']),\n  color: PropTypes.oneOf(['white', 'black']),\n};\n\nMarkerHeading.defaultProps = {\n  bg: 'yellow',\n  color: 'black',\n};\n\nexport default MarkerHeading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\n\nimport BiLink from '../BiLink';\n\nconst StyledItem = styled.li`\n  max-width: 200px;\n  text-align: center;\n  a {\n    color: white;\n    width: 190px;\n    .gatsby-image-wrapper {\n      border-radius: 50%;\n      filter: grayscale(100%);\n      transition: 0.3s filter;\n    }\n    &:hover {\n      .gatsby-image-wrapper {\n        filter: none;\n      }\n    }\n\n    h3 {\n      position: relative;\n      display: inline-block;\n      padding: 0 0.4rem 0.1rem;\n      font-weight: 700;\n      z-index: 1;\n      &::before {\n        content: ' ';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: -1;\n        background-image: linear-gradient(\n          to bottom,\n          rgba(0, 0, 0, 0) 0,\n          rgba(0, 0, 0, 0) 49%,\n          #b902bf 50%,\n          #b902bf 100%\n        );\n      }\n    }\n  }\n\n  > ul {\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    > li {\n      color: white;\n      padding: 0;\n      margin: 0;\n    }\n  }\n`;\n\nconst Item = ({ uri, image, name, tasks }) => (\n  <StyledItem>\n    <BiLink url={uri}>\n      <GatsbyImage fixed={image} alt={`Foto de ${name}`} />\n      <h3>{name}</h3>\n    </BiLink>\n    {tasks && (\n      <ul>\n        {tasks.map((x, idx) => (\n          <li key={idx}>{x}</li>\n        ))}\n      </ul>\n    )}\n  </StyledItem>\n);\n\nItem.propTypes = {\n  uri: PropTypes.string,\n  image: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  tasks: PropTypes.array,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledTeam = styled.div`\n  background-image: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0) 0,\n    rgba(0, 0, 0, 0) 100px,\n    black 101px,\n    black 100%\n  );\n  margin: 2rem 0 -3rem 0;\n  padding: 0 0 2rem;\n\n  > ul {\n    max-width: 1024px;\n    margin: 0 auto;\n    list-style: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    > li {\n      padding: 1.5rem;\n    }\n  }\n`;\n\nconst Team = ({ items }) => (\n  <StyledTeam>\n    <ul>\n      {items.map((x, idx) => (\n        <Item key={idx} {...x} />\n      ))}\n    </ul>\n  </StyledTeam>\n);\n\nTeam.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      uri: PropTypes.string,\n      image: PropTypes.object.isRequired,\n      name: PropTypes.string.isRequired,\n      tasks: PropTypes.array,\n    })\n  ),\n};\n\nexport default Team;\n","import Team from './Team';\nexport default Team;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { injectIntl } from 'gatsby-plugin-intl';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Section from '../components/Section';\n\nimport Team from '../components/Team';\n\nconst WhoPage = ({ data, intl }) => (\n  <Layout>\n    <SEO title={intl.formatMessage({ id: 'Who we are' })} />\n    <Section id={'info'} title={intl.formatMessage({ id: 'Who we are' })}>\n      <div dangerouslySetInnerHTML={{ __html: data.text.html }} />\n    </Section>\n    <Team\n      items={data.team.edges.map((x) => ({\n        uri: `/who/team/${x.node.frontmatter.slug}`,\n        name: x.node.frontmatter.name,\n        image: x.node.frontmatter.image.childImageSharp.fixed,\n        tasks: x.node.frontmatter.tasks,\n        email: x.node.frontmatter.email,\n      }))}\n    />\n  </Layout>\n);\n\nWhoPage.propTypes = {\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func,\n  }),\n  data: PropTypes.shape({\n    text: PropTypes.shape({\n      html: PropTypes.string,\n    }),\n  }),\n};\n\nexport default injectIntl(WhoPage);\n\nexport const pageQuery = graphql`\n  query($language: String) {\n    text: markdownRemark(\n      frontmatter: { id: { eq: \"who/intro\" }, lang: { eq: $language } }\n      fileInfo: { sourceInstanceName: { eq: \"pages\" } }\n    ) {\n      html\n    }\n    team: allMarkdownRemark(\n      filter: {\n        fileInfo: { sourceInstanceName: { eq: \"team\" } }\n        frontmatter: { lang: { eq: $language } }\n      }\n      sort: { fields: frontmatter___name, order: ASC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            name\n            tasks\n            image {\n              childImageSharp {\n                fixed(quality: 95, width: 160, height: 160) {\n                  ...GatsbyImageSharpFixed_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledAnchor = styled.a`\n  display: block;\n  position: relative;\n  top: -100px;\n  visibility: hidden;\n`;\n\nconst Anchor = ({ id }) => <StyledAnchor id={id} />;\n\nAnchor.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Anchor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Anchor from './Anchor';\nimport MarkerHeading from './MarkedHeading';\n\nconst StyledSection = styled.section`\n  padding: 1.5rem;\n  max-width: 1024px;\n  margin: 0 auto;\n  h2 {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Section = ({ children, id, title }) => (\n  <StyledSection>\n    <Anchor id={id} />\n    {title && (\n      <center>\n        <MarkerHeading>{title}</MarkerHeading>\n      </center>\n    )}\n    {children}\n  </StyledSection>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default Section;\n"],"sourceRoot":""}