{"version":3,"sources":["webpack:///./src/images/team-mobile.jpg","webpack:///./src/pages/contact.js","webpack:///./src/components/MarkedHeading.jsx","webpack:///./src/images/team.jpg","webpack:///./src/components/Anchor.jsx","webpack:///./src/components/Section.jsx"],"names":["module","exports","StyledContactPage","styled","div","injectIntl","intl","data","title","formatMessage","id","className","href","meta","email","target","rel","src","image","alt","version","xmlns","xmlnsXlink","viewBox","preserveAspectRatio","width","height","xlinkHref","pageQuery","StyledMarkedHeading","h2","props","color","bg","MarkerHeading","children","defaultProps","StyledAnchor","a","Anchor","StyledSection","section","Section"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,2D,oCCA3C,uKAcMC,GAdN,UAc0BC,IAAOC,IAAV,6EAAGD,CAAH,g0BAsORE,gCAhHK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,EAASC,KAAT,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOF,EAAKG,cAAc,CAAEC,GAAI,cACrC,kBAACR,EAAD,KACE,kBAAC,IAAD,CAASQ,GAAI,QAASF,MAAOF,EAAKG,cAAc,CAAEC,GAAI,aACpD,yBAAKC,UAAW,QACd,yBAAKA,UAAW,QACbL,EAAKG,cAAc,CAAEC,GAAI,0BAE5B,yBAAKC,UAAW,cAChB,yBAAKA,UAAW,SACd,uBACEC,KAAI,UAAYC,IAAKC,MACrBC,OAAQ,SACRC,IAAK,uBAEJH,IAAKC,SAaZ,yBAAKH,UAAW,SACd,yBAAKM,IAAKC,IAAOC,IAAK,qBA0BxB,yBAAKR,UAAW,gBACd,yBACES,QAAQ,MACRC,MAAM,6BACNC,WAAW,+BACXC,QAAQ,eACRC,oBAAoB,iBAEpB,2BAAOC,MAAM,OAAOC,OAAO,MAAMC,UAAWT,cAkDjD,IAAMU,EAAS,c,kCCtPtB,yBAIMC,EAJN,UAI4B1B,EAAO2B,GAAV,yFAAG3B,CAAH,sSAMd,SAAC4B,GAAD,OAAWA,EAAMC,SAWpB,SAACD,GAAD,sBAA2BA,EAAME,GAAjC,aACA,SAACF,GAAD,sBAA2BA,EAAME,GAAjC,aAMFC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUF,EAAb,EAAaA,GAAID,EAAjB,EAAiBA,MAAjB,OACpB,kBAACH,EAAD,CAAqBI,GAAIA,EAAID,MAAOA,GACjCG,IAULD,EAAcE,aAAe,CAC3BH,GAAI,SACJD,MAAO,SAGME,O,qBC7CflC,EAAOC,QAAU,IAA0B,oD,uECIrCoC,EAAelC,IAAOmC,EAAV,0EAAGnC,CAAH,mEAaHoC,EANA,SAAC,GAAD,IAAG7B,EAAH,EAAGA,GAAH,OAAY,kBAAC2B,EAAD,CAAc3B,GAAIA,K,YCJvC8B,EAAgBrC,IAAOsC,QAAV,yEAAGtC,CAAH,gFA2BJuC,IAlBC,SAAC,GAAD,IAAGP,EAAH,EAAGA,SAAUzB,EAAb,EAAaA,GAAIF,EAAjB,EAAiBA,MAAjB,OACd,kBAACgC,EAAD,KACE,kBAAC,EAAD,CAAQ9B,GAAIA,IACXF,GACC,gCACE,kBAAC,IAAD,KAAgBA,IAGnB2B","file":"component---src-pages-contact-js-bf01481ff2bc96fdc7cf.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/team-mobile-af4375021707c250bef0c89a6b932537.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { Link, injectIntl } from 'gatsby-plugin-intl';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Section from '../components/Section';\n\nimport meta from '../../data/static/meta';\nimport image from '../images/team.jpg';\nimport imageMobile from '../images/team-mobile.jpg';\n\nconst StyledContactPage = styled.div`\n  .info {\n    display: grid;\n    grid-template-columns: 1fr 2px 1fr;\n\n    grid-gap: 1rem;\n    max-width: 427px;\n    margin: 0 auto;\n    font-size: 1.2rem;\n    .left {\n      font-weight: bold;\n    }\n    .separator {\n      width: 2px;\n      height: 100%;\n      background-color: black;\n    }\n    .full {\n      grid-column-start: 1;\n      grid-column-end: 4;\n    }\n  }\n  @media (max-width: 980px) {\n    .info {\n      grid-template-columns: 1fr;\n      .left,\n      .right,\n      .full {\n        text-align: center;\n      }\n\n      .separator {\n        display: none;\n      }\n      .full {\n        grid-column-start: 1;\n        grid-column-end: 2;\n      }\n    }\n  }\n\n  .image {\n    margin-top: 2rem;\n    position: relative;\n    img {\n      width: 100%;\n    }\n    .box {\n      position: absolute;\n      padding: 0.2rem 0.3rem;\n      background-color: var(--marked-yellow-color);\n      a {\n        color: black;\n        &.weight-normal {\n          font-weight: normal;\n        }\n      }\n    }\n  }\n\n  .image-mobile {\n    margin-top: 2rem;\n    margin-bottom: -2rem;\n    img {\n      width: 100%;\n    }\n    display: none;\n  }\n\n  .only-mobile {\n    display: none;\n  }\n\n  @media (max-width: 980px) {\n    .image {\n      display: none;\n    }\n    .image-mobile {\n      display: block;\n    }\n    .only-mobile {\n      display: inline-block;\n    }\n  }\n`;\n\nconst teamMeta = {\n  alberto: {\n    pos: ['51%', '3%'],\n    align: 'left',\n    poly:\n      '543,609 564,354 562,236 533,203 546,191 582,183 588,172 577,111 591,88 637,87 651,103 662,145 661,159 654,175 704,188 714,216 701,243 708,258 730,322 708,413 708,508 703,538 679,610',\n  },\n  irene: {\n    pos: ['9%', '68%'],\n    align: 'right',\n    poly:\n      '256,609 253,583 225,592 204,510 232,497 229,464 215,443 230,312 275,246 305,232 319,147 355,117 390,139 403,183 423,341 376,610',\n  },\n  jose: {\n    pos: ['80%', '29%'],\n    align: 'left',\n    poly:\n      '741,610 714,492 705,418 729,317 700,241 712,210 735,185 713,159 712,99 749,78 787,95 795,131 798,161 816,175 853,182 888,215 953,318 941,359 879,443 857,452 848,610',\n  },\n  maca: {\n    pos: ['-10%', '41%'],\n    align: 'right',\n    poly: '230,309 97,307 101,54 283,58 278,244 251,273 234,308',\n  },\n  mimar: {\n    pos: ['39%', '74%'],\n    align: 'left',\n    poly:\n      '514,610 524,535 525,444 516,429 531,387 537,344 550,358 560,336 561,239 535,206 519,200 516,138 501,99 468,92 439,105 436,175 403,206 424,364 374,609',\n  },\n};\n\nconst ContactPage = ({ intl, data }) => (\n  <Layout>\n    <SEO title={intl.formatMessage({ id: 'Contact' })} />\n    <StyledContactPage>\n      <Section id={'email'} title={intl.formatMessage({ id: 'Contact' })}>\n        <div className={'info'}>\n          <div className={'left'}>\n            {intl.formatMessage({ id: 'You can write us at:' })}\n          </div>\n          <div className={'separator'} />\n          <div className={'right'}>\n            <a\n              href={`mailto:${meta.email}`}\n              target={'_blank'}\n              rel={'noopener noreferrer'}\n            >\n              {meta.email}\n            </a>\n          </div>\n          {/*\n          <div className={'full'}>\n            {intl.formatMessage({ id: 'Or you can contact each of us!' })}{' '}\n            <span className={'only-mobile'}>\n              {intl.formatMessage({ id: '(Click on our silhouettes)' })}\n            </span>\n          </div>\n          */}\n        </div>\n\n        <div className={'image'}>\n          <img src={image} alt={'Foto del equipo'} />\n          {/* data.team.edges.map((x, idx) => {\n            const { pos, align } = teamMeta[x.node.frontmatter.slug];\n            return (\n              <div\n                className={'box'}\n                key={idx}\n                style={{ left: pos[0], top: pos[1], textAlign: align }}\n              >\n                <Link to={`/who/team/${x.node.frontmatter.slug}`}>\n                  <strong>{x.node.frontmatter.name}</strong>\n                </Link>\n                <br />\n                <a\n                  href={`mailto:${x.node.frontmatter.email}`}\n                  className={'weight-normal'}\n                  target={'_blank'}\n                  rel={'noopener noreferrer'}\n                >\n                  {x.node.frontmatter.email}\n                </a>\n              </div>\n            );\n          })*/}\n        </div>\n\n        <div className={'image-mobile'}>\n          <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            viewBox=\"0 0 1024 610\"\n            preserveAspectRatio=\"xMinYMin meet\"\n          >\n            <image width=\"1024\" height=\"610\" xlinkHref={image} />\n            {/* data.team.edges.map((x, idx) => {\n              const { poly } = teamMeta[x.node.frontmatter.slug];\n              return (\n                <g className=\"member\" key={idx}>\n                  <a\n                    xlinkHref={`mailto:${x.node.frontmatter.email}`}\n                    target={'_blank'}\n                    rel={'noopener noreferrer'}\n                  >\n                    <polygon\n                      points={poly}\n                      style={{\n                        fill: 'rgba(0,0,0,0)',\n                      }}\n                    />\n                  </a>\n                </g>\n              );\n            })*/}\n          </svg>\n        </div>\n      </Section>\n    </StyledContactPage>\n  </Layout>\n);\n\nContactPage.propTypes = {\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func,\n  }),\n  data: PropTypes.shape({\n    team: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              slug: PropTypes.string,\n              email: PropTypes.string,\n              name: PropTypes.string,\n            }),\n          }),\n        })\n      ),\n    }),\n  }),\n};\n\nexport default injectIntl(ContactPage);\n\nexport const pageQuery = graphql`\n  query($language: String) {\n    team: allMarkdownRemark(\n      filter: {\n        fileInfo: { sourceInstanceName: { eq: \"team\" } }\n        frontmatter: { lang: { eq: $language } }\n      }\n      sort: { fields: frontmatter___name, order: ASC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            name\n            email\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledMarkedHeading = styled.h2`\n  display: inline-block;\n  position: relative;\n  padding: 0.5rem 0.6rem 0.1rem;\n  // TODO Avoid using important\n  margin-bottom: 6rem !important;\n  color: ${(props) => props.color};\n  &::before {\n    content: ' ';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: -1;\n    background-image: linear-gradient(\n      to right,\n      ${(props) => `var(--marked-${props.bg}-color)`} 0,\n      ${(props) => `var(--marked-${props.bg}-color)`} 100%\n    );\n    transform: rotate(0.4deg) skew(-10deg);\n  }\n`;\n\nconst MarkerHeading = ({ children, bg, color }) => (\n  <StyledMarkedHeading bg={bg} color={color}>\n    {children}\n  </StyledMarkedHeading>\n);\n\nMarkerHeading.propTypes = {\n  children: PropTypes.node,\n  bg: PropTypes.oneOf(['yellow', 'green']),\n  color: PropTypes.oneOf(['white', 'black']),\n};\n\nMarkerHeading.defaultProps = {\n  bg: 'yellow',\n  color: 'black',\n};\n\nexport default MarkerHeading;\n","module.exports = __webpack_public_path__ + \"static/team-0017dfe1fa819f647d364406f94af3f7.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledAnchor = styled.a`\n  display: block;\n  position: relative;\n  top: -100px;\n  visibility: hidden;\n`;\n\nconst Anchor = ({ id }) => <StyledAnchor id={id} />;\n\nAnchor.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Anchor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Anchor from './Anchor';\nimport MarkerHeading from './MarkedHeading';\n\nconst StyledSection = styled.section`\n  padding: 1.5rem;\n  max-width: 1024px;\n  margin: 0 auto 3rem;\n  h2 {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Section = ({ children, id, title }) => (\n  <StyledSection>\n    <Anchor id={id} />\n    {title && (\n      <center>\n        <MarkerHeading>{title}</MarkerHeading>\n      </center>\n    )}\n    {children}\n  </StyledSection>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default Section;\n"],"sourceRoot":""}