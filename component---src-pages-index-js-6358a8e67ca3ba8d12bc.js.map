{"version":3,"sources":["webpack:///./src/components/home/Who.jsx","webpack:///./src/components/index/Team/Member.jsx","webpack:///./src/components/index/Team/Team.jsx","webpack:///./src/components/index/Team/index.js","webpack:///./src/components/index/Projects/Item.jsx","webpack:///./src/components/index/Projects/Projects.jsx","webpack:///./src/components/index/Projects/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/SEO.jsx","webpack:///./src/components/Anchor.jsx","webpack:///./src/components/Section.jsx"],"names":["StyledWho","styled","section","Who","StyledMember","div","Member","slug","image","name","tasks","to","fixed","childImageSharp","alt","map","x","idx","key","StyledTeam","Team","edges","allMarkdownRemark","node","frontmatter","StyledItem","Item","title","className","objectFit","objectPosition","width","height","maxHeight","StyledProjects","Projects","content","excerpt","IndexPage","Layout","SEO","Section","id","description","lang","meta","home","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","property","author","concat","defaultProps","StyledAnchor","a","Anchor","StyledSection","children"],"mappings":"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","file":"component---src-pages-index-js-6358a8e67ca3ba8d12bc.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledWho = styled.section`\n  margin: 1rem 0;\n  text-align: center;\n`;\n\nconst Who = () => (\n  <StyledWho>\n    LA PERIFÉRICA - Cultura Contemporánea es un Colectivo de Gestorxs Culturales\n    almerienses que busca poner en valor la vida cultural de la ciudad y de la\n    provincia desde una visión innovadora, apoyando y fomentando el talento\n    local, el intercambio y la cooperación internacional y sobre todo la\n    implicación y participación ciudadana a través de proyectos artísticos y\n    culturales que promuevan la reflexión de los retos y temas contemporáneos.\n    <br />\n    Uno de nuestros ámbitos de trabajo son los proyectos internacionales como\n    los que realizamos a través del programa europeo Erasmus +.\n  </StyledWho>\n);\n\nexport default Who;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nconst StyledMember = styled.div`\n  > ul {\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    > li {\n      padding: 0;\n    }\n  }\n`;\n\nconst Member = ({ slug, image, name, tasks }) => (\n  <StyledMember>\n    <Link to={`/team/${slug}`}>\n      <GatsbyImage\n        fixed={image.childImageSharp.fixed}\n        alt={`Foto de ${name}`}\n      />\n    </Link>\n    <Link to={`/team/${slug}`}>\n      <h3>{name}</h3>\n    </Link>\n    <ul>\n      {tasks.map((x, idx) => (\n        <li key={idx}>{x}</li>\n      ))}\n    </ul>\n  </StyledMember>\n);\n\nMember.propTypes = {\n  slug: PropTypes.string,\n  image: PropTypes.object,\n  name: PropTypes.string,\n  tasks: PropTypes.array,\n};\n\nexport default Member;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Member from './Member';\n\nconst StyledTeam = styled.section`\n  margin: 1rem 0;\n  text-align: center;\n  > ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    > li {\n      padding: 1.5rem;\n    }\n  }\n`;\n\nconst Team = () => {\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: { fileInfo: { sourceInstanceName: { eq: \"team\" } } }\n        sort: { fields: frontmatter___name, order: ASC }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              name\n              tasks\n              social {\n                linkedin\n                twitter\n                facebook\n              }\n              image {\n                childImageSharp {\n                  fixed(quality: 95, width: 200) {\n                    ...GatsbyImageSharpFixed_withWebp\n                  }\n                }\n              }\n            }\n            html\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <StyledTeam>\n      <ul>\n        {edges\n          .map((x) => x.node)\n          .map((x, idx) => (\n            <li key={idx}>\n              <Member {...x.frontmatter} />\n            </li>\n          ))}\n      </ul>\n    </StyledTeam>\n  );\n};\n\nexport default Team;\n","import Team from './Team';\nexport default Team;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nconst StyledItem = styled.div`\n  position: relative;\n  text-align: left;\n  .gatsby-image-wrapper {\n    display: block !important;\n  }\n  .gatsby-image-wrapper,\n  img {\n    margin-bottom: 0;\n  }\n  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.5);\n  .image {\n    overflow: hidden;\n    a {\n      display: block;\n      &:hover {\n        transform: scale(1.2) rotate(5deg);\n      }\n    }\n  }\n  .title {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.7);\n    padding: 0.7rem 1rem;\n    a {\n      text-transform: uppercase;\n      color: var(--mainColor);\n      text-decoration: none;\n      font-size: 1.4rem;\n    }\n  }\n`;\n\nconst Item = ({ slug, image, title }) => (\n  <StyledItem>\n    <div className={'image'}>\n      <Link to={`/projects/${slug}`}>\n        <GatsbyImage\n          objectFit={'cover'}\n          objectPosition={'100% 0'}\n          width={'100%'}\n          height={'100%'}\n          maxHeight={'25rem'}\n          fixed={image.childImageSharp.fixed}\n          alt={title}\n        />\n      </Link>\n    </div>\n    <div className={'title'}>\n      <Link to={`/projects/${slug}`}>{title}</Link>\n    </div>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  slug: PropTypes.string,\n  image: PropTypes.object,\n  title: PropTypes.string,\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Item from './Item';\n\nconst StyledProjects = styled.section`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(410px, 410px));\n  grid-gap: 1rem;\n  justify-content: center;\n  justify-items: center;\n`;\n\nconst Projects = () => {\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: { fileInfo: { sourceInstanceName: { eq: \"projects\" } } }\n        sort: { fields: frontmatter___title, order: ASC }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              title\n              image {\n                childImageSharp {\n                  fixed(quality: 95, width: 410, height: 300) {\n                    ...GatsbyImageSharpFixed_withWebp\n                  }\n                }\n              }\n            }\n            excerpt\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <StyledProjects>\n      {edges\n        .map((x) => x.node)\n        .map((x, idx) => (\n          <div key={idx}>\n            <Item {...x.frontmatter} content={x.excerpt} />\n          </div>\n        ))}\n    </StyledProjects>\n  );\n};\n\nexport default Projects;\n","import Projects from './Projects';\nexport default Projects;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Who from '../components/home/Who';\nimport Team from '../components/index/Team';\nimport Projects from '../components/index/Projects';\nimport Section from '../components/Section';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Inicio\" />\n    <Section id={'latest-projects'} title={'Últimos Proyectos'}>\n      <Projects />\n    </Section>\n    <Section id={'quienes-somos'} title={'Quienes somos'}>\n      <Who />\n    </Section>\n    <Section id={'equipo'} title={'Equipo'}>\n      <Team />\n    </Section>\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title, home }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={\n        home ? site.siteMetadata.title : `%s | ${site.siteMetadata.title}`\n      }\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'es',\n  meta: [],\n  description: '',\n  home: false,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  home: PropTypes.bool,\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledAnchor = styled.a`\n  display: block;\n  position: relative;\n  top: -100px;\n  visibility: hidden;\n`;\n\nconst Anchor = ({ id }) => <StyledAnchor id={id} />;\n\nAnchor.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Anchor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Anchor from './Anchor';\n\nconst StyledSection = styled.section`\n  padding: 1.5rem;\n  max-width: 1280px;\n  margin: 0 auto;\n  text-align: center;\n  h2 {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Section = ({ children, id, title }) => (\n  <StyledSection>\n    <Anchor id={id} />\n    <h2>{title}</h2>\n    {children}\n  </StyledSection>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default Section;\n"],"sourceRoot":""}