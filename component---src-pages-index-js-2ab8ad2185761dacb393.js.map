{"version":3,"sources":["webpack:///./data/featured/current/image.jpg","webpack:///./src/pages/index.js","webpack:///./src/components/Grid/Item.jsx","webpack:///./src/components/Grid/Grid.jsx","webpack:///./src/components/Grid/index.js","webpack:///./src/components/MarkedHeading.jsx","webpack:///./src/components/Anchor.jsx","webpack:///./src/components/Section.jsx"],"names":["module","exports","StyledBanner","styled","div","injectIntl","data","intl","title","formatMessage","id","href","target","rel","src","banner","dangerouslySetInnerHTML","__html","text","html","items","projects","edges","map","x","uri","node","frontmatter","slug","image","childImageSharp","fixed","pageQuery","StyledItem","Item","date","to","className","alt","StyledGrid","section","props","align","Grid","idx","key","defaultProps","StyledMarkedHeading","h2","color","bg","MarkerHeading","children","StyledAnchor","a","Anchor","StyledSection","Section"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,qD,mNCarCC,EAAeC,IAAOC,IAAV,sEAAGD,CAAH,oGA0DHE,gCA5CG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOD,EAAKE,cAAc,CAAEC,GAAI,WACrC,kBAACR,EAAD,KACE,uBACES,KAAM,iDACNC,OAAQ,SACRC,IAAK,uBAEL,yBAAKC,IAAKC,QAGd,kBAAC,IAAD,CAASL,GAAI,gBAAiBF,MAAO,uCACnC,yBAAKQ,wBAAyB,CAAEC,OAAQX,EAAKY,KAAKC,SAEpD,kBAAC,IAAD,CACET,GAAI,kBACJF,MAAOD,EAAKE,cAAc,CAAEC,GAAI,qBAEhC,kBAAC,IAAD,CACEU,MAAOd,EAAKe,SAASC,MAAMC,KAAI,SAACC,GAAD,MAAQ,CACrCC,IAAI,aAAcD,EAAEE,KAAKC,YAAYC,KACrCpB,MAAOgB,EAAEE,KAAKC,YAAYnB,MAC1BqB,MAAOL,EAAEE,KAAKC,YAAYE,MAAMC,gBAAgBC,iBAuBnD,IAAMC,EAAS,Y,wGCnEhBC,EAAa9B,IAAOC,IAAV,mEAAGD,CAAH,wdAkED+B,EArBF,SAAC,GAAD,IAAGT,EAAH,EAAGA,IAAKI,EAAR,EAAQA,MAAOrB,EAAf,EAAeA,MAAO2B,EAAtB,EAAsBA,KAAtB,OACX,kBAACF,EAAD,KACE,kBAAC,OAAD,CAAMG,GAAIX,GACR,yBAAKY,UAAW,SACd,kBAAC,IAAD,CAAaN,MAAOF,EAAOS,IAAK9B,KAElC,yBAAK6B,UAAW,SACb7B,EACA2B,GAAQ,+BAAQA,OCrDnBI,EAAapC,IAAOqC,QAAV,uEAAGrC,CAAH,mJAKK,SAACsC,GAAD,OAAWA,EAAMC,SAIhCC,EAAO,SAAC,GAAD,IAAGvB,EAAH,EAAGA,MAAOsB,EAAV,EAAUA,MAAV,OACX,kBAACH,EAAD,CAAYG,MAAOA,GAChBtB,EAAMG,KAAI,SAACC,EAAGoB,GAAJ,OACT,yBAAKC,IAAKD,GACR,kBAAC,EAASpB,SAmBlBmB,EAAKG,aAAe,CAClBJ,MAAO,UAGMC,QCzCAA,O,kCCDf,yBAIMI,EAJN,UAI4B5C,EAAO6C,GAAV,yFAAG7C,CAAH,sSAMd,SAACsC,GAAD,OAAWA,EAAMQ,SAWpB,SAACR,GAAD,sBAA2BA,EAAMS,GAAjC,aACA,SAACT,GAAD,sBAA2BA,EAAMS,GAAjC,aAMFC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUF,EAAb,EAAaA,GAAID,EAAjB,EAAiBA,MAAjB,OACpB,kBAACF,EAAD,CAAqBG,GAAIA,EAAID,MAAOA,GACjCG,IAULD,EAAcL,aAAe,CAC3BI,GAAI,SACJD,MAAO,SAGME,O,uECzCTE,EAAelD,IAAOmD,EAAV,0EAAGnD,CAAH,mEAaHoD,EANA,SAAC,GAAD,IAAG7C,EAAH,EAAGA,GAAH,OAAY,kBAAC2C,EAAD,CAAc3C,GAAIA,K,YCJvC8C,EAAgBrD,IAAOqC,QAAV,yEAAGrC,CAAH,gFA2BJsD,IAlBC,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAU1C,EAAb,EAAaA,GAAIF,EAAjB,EAAiBA,MAAjB,OACd,kBAACgD,EAAD,KACE,kBAAC,EAAD,CAAQ9C,GAAIA,IACXF,GACC,gCACE,kBAAC,IAAD,KAAgBA,IAGnB4C","file":"component---src-pages-index-js-2ab8ad2185761dacb393.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/image-a58ea931087cc591f39e4a9c1f23e3b7.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { injectIntl } from 'gatsby-plugin-intl';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Section from '../components/Section';\nimport Grid from '../components/Grid';\n\nimport banner from '../../data/featured/current/image.jpg';\n\nconst StyledBanner = styled.div`\n  text-align: center;\n  margin-bottom: 4rem;\n  img {\n    width: 80%;\n  }\n\n  @media (max-width: 980px) {\n    img {\n      width: 100%;\n    }\n  }\n`;\n\nconst IndexPage = ({ data, intl }) => (\n  <Layout>\n    <SEO title={intl.formatMessage({ id: 'Home' })} />\n    <StyledBanner>\n      <a\n        href={'https://confines-ilustrados.laperifericacc.com'}\n        target={'_blank'}\n        rel={'noopener noreferrer'}\n      >\n        <img src={banner} />\n      </a>\n    </StyledBanner>\n    <Section id={'quienes-somos'} title={'La Periférica Cultura Contemporánea'}>\n      <div dangerouslySetInnerHTML={{ __html: data.text.html }} />\n    </Section>\n    <Section\n      id={'latest-projects'}\n      title={intl.formatMessage({ id: 'Latest Projects' })}\n    >\n      <Grid\n        items={data.projects.edges.map((x) => ({\n          uri: `/projects/${x.node.frontmatter.slug}`,\n          title: x.node.frontmatter.title,\n          image: x.node.frontmatter.image.childImageSharp.fixed,\n        }))}\n      />\n    </Section>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func,\n  }),\n  data: PropTypes.shape({\n    text: PropTypes.shape({\n      html: PropTypes.string,\n    }),\n    projects: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n};\n\nexport default injectIntl(IndexPage);\n\nexport const pageQuery = graphql`\n  query($language: String) {\n    text: markdownRemark(\n      frontmatter: { id: { eq: \"home/who\" }, lang: { eq: $language } }\n      fileInfo: { sourceInstanceName: { eq: \"pages\" } }\n    ) {\n      html\n    }\n    projects: allMarkdownRemark(\n      filter: {\n        fileInfo: { sourceInstanceName: { eq: \"projects\" } }\n        frontmatter: { lang: { eq: $language } }\n      }\n      sort: { fields: frontmatter___title, order: ASC }\n      limit: 6\n    ) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n            image {\n              childImageSharp {\n                fixed(quality: 95, width: 300, height: 250) {\n                  ...GatsbyImageSharpFixed_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\nimport { Link } from 'gatsby-plugin-intl';\n\nconst StyledItem = styled.div`\n  position: relative;\n  box-shadow: 0 0 0.3rem rgba(0, 0, 0, 0.3);\n  overflow: hidden;\n\n  .gatsby-image-wrapper {\n    display: block !important;\n  }\n  .gatsby-image-wrapper,\n  img {\n    margin-bottom: 0;\n  }\n\n  .image {\n    transition: all 0.3s;\n  }\n\n  .title {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.7);\n    padding: 0.7rem;\n    box-shadow: 0 -0.2rem 0.2rem rgba(0, 0, 0, 0.2);\n    text-transform: uppercase;\n\n    small {\n      text-align: right;\n      display: block;\n      color: gray;\n    }\n  }\n\n  a {\n    color: white;\n    &:hover {\n      color: white;\n      .image {\n        transform: scale(1.2);\n      }\n    }\n  }\n`;\n\nconst Item = ({ uri, image, title, date }) => (\n  <StyledItem>\n    <Link to={uri}>\n      <div className={'image'}>\n        <GatsbyImage fixed={image} alt={title} />\n      </div>\n      <div className={'title'}>\n        {title}\n        {date && <small>{date}</small>}\n      </div>\n    </Link>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  uri: PropTypes.string,\n  image: PropTypes.object,\n  title: PropTypes.string,\n  date: PropTypes.string,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledGrid = styled.section`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 300px));\n  grid-gap: 2rem;\n  justify-content: ${(props) => props.align};\n  justify-items: center;\n`;\n\nconst Grid = ({ items, align }) => (\n  <StyledGrid align={align}>\n    {items.map((x, idx) => (\n      <div key={idx}>\n        <Item {...x} />\n      </div>\n    ))}\n  </StyledGrid>\n);\n\nGrid.propTypes = {\n  align: PropTypes.string,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.object.isRequired,\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      text: PropTypes.string,\n    })\n  ),\n};\n\nGrid.defaultProps = {\n  align: 'center',\n};\n\nexport default Grid;\n","import Grid from './Grid';\nexport default Grid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledMarkedHeading = styled.h2`\n  display: inline-block;\n  position: relative;\n  padding: 0.5rem 0.6rem 0.1rem;\n  // TODO Avoid using important\n  margin-bottom: 6rem !important;\n  color: ${(props) => props.color};\n  &::before {\n    content: ' ';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: -1;\n    background-image: linear-gradient(\n      to right,\n      ${(props) => `var(--marked-${props.bg}-color)`} 0,\n      ${(props) => `var(--marked-${props.bg}-color)`} 100%\n    );\n    transform: rotate(0.4deg) skew(-10deg);\n  }\n`;\n\nconst MarkerHeading = ({ children, bg, color }) => (\n  <StyledMarkedHeading bg={bg} color={color}>\n    {children}\n  </StyledMarkedHeading>\n);\n\nMarkerHeading.propTypes = {\n  children: PropTypes.node,\n  bg: PropTypes.oneOf(['yellow', 'green']),\n  color: PropTypes.oneOf(['white', 'black']),\n};\n\nMarkerHeading.defaultProps = {\n  bg: 'yellow',\n  color: 'black',\n};\n\nexport default MarkerHeading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledAnchor = styled.a`\n  display: block;\n  position: relative;\n  top: -100px;\n  visibility: hidden;\n`;\n\nconst Anchor = ({ id }) => <StyledAnchor id={id} />;\n\nAnchor.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Anchor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Anchor from './Anchor';\nimport MarkerHeading from './MarkedHeading';\n\nconst StyledSection = styled.section`\n  padding: 1.5rem;\n  max-width: 1024px;\n  margin: 0 auto 3rem;\n  h2 {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Section = ({ children, id, title }) => (\n  <StyledSection>\n    <Anchor id={id} />\n    {title && (\n      <center>\n        <MarkerHeading>{title}</MarkerHeading>\n      </center>\n    )}\n    {children}\n  </StyledSection>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default Section;\n"],"sourceRoot":""}