{"version":3,"sources":["webpack:///./src/components/BiLink.jsx","webpack:///./src/components/Persons/Item.jsx","webpack:///./src/components/Persons/Persons.jsx","webpack:///./src/components/Persons/index.js","webpack:///./src/components/home/Who.jsx","webpack:///./src/components/home/Featured.jsx","webpack:///./src/components/home/LatestProjects.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/Grid/Item.jsx","webpack:///./src/components/Grid/Grid.jsx","webpack:///./src/components/Grid/index.js","webpack:///./src/components/SEO.jsx","webpack:///./src/components/Anchor.jsx","webpack:///./src/components/Section.jsx"],"names":["BiLink","url","children","startsWith","href","target","rel","to","StyledItem","styled","li","Item","uri","image","name","tasks","email","fixed","alt","map","x","idx","key","StyledPersons","ul","Persons","items","StyledWho","section","Who","StyledFeatured","Featured","markdownRemark","html","frontmatter","childImageSharp","title","dangerouslySetInnerHTML","__html","LatestProjects","edges","allMarkdownRemark","Grid","node","slug","IndexPage","Layout","SEO","Section","id","div","date","className","objectFit","objectPosition","width","height","maxHeight","StyledGrid","description","lang","meta","home","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","StyledAnchor","a","Anchor","StyledSection"],"mappings":"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","file":"component---src-pages-index-js-edb4cd903fa19d4c466f.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst BiLink = ({ url, children }) =>\n  url.startsWith('http') ? (\n    <a href={url} target={'_blank'} rel={'noopener noreferrer'}>\n      {children}\n    </a>\n  ) : (\n    <Link to={url}>{children}</Link>\n  );\n\nBiLink.propTypes = {\n  url: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default BiLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\n\nimport BiLink from '../BiLink';\n\nconst StyledItem = styled.li`\n  .gatsby-image-wrapper {\n    border-radius: 50%;\n  }\n  > ul {\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    > li {\n      padding: 0;\n    }\n  }\n`;\n\nconst Item = ({ uri, image, name, tasks, email }) => (\n  <StyledItem>\n    <BiLink url={uri}>\n      <GatsbyImage fixed={image} alt={`Foto de ${name}`} />\n    </BiLink>\n    <BiLink url={uri}>\n      <h3>{name}</h3>\n    </BiLink>\n    {tasks && (\n      <ul>\n        {tasks.map((x, idx) => (\n          <li key={idx}>{x}</li>\n        ))}\n      </ul>\n    )}\n    <p>{email}</p>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  uri: PropTypes.string,\n  image: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  tasks: PropTypes.array,\n  email: PropTypes.string,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledPersons = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  > li {\n    padding: 1.5rem;\n  }\n`;\n\nconst Persons = ({ items }) => (\n  <StyledPersons>\n    {items.map((x, idx) => (\n      <Item key={idx} {...x} />\n    ))}\n  </StyledPersons>\n);\n\nPersons.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      uri: PropTypes.string,\n      image: PropTypes.object.isRequired,\n      name: PropTypes.string.isRequired,\n      tasks: PropTypes.array,\n      email: PropTypes.string,\n    })\n  ),\n};\n\nexport default Persons;\n","import Persons from './Persons';\nexport default Persons;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledWho = styled.section`\n  margin: 1rem 0;\n  text-align: center;\n`;\n\nconst Who = () => (\n  <StyledWho>\n    Somos un Colectivo de Gestorxs Culturales almerienses que busca poner en\n    valor la vida cultural de la ciudad y de la provincia desde una visión\n    innovadora, apoyando y fomentando el talento local, el intercambio y la\n    cooperación internacional y sobre todo la implicación y participación\n    ciudadana a través de proyectos artísticos y culturales que promuevan la\n    reflexión de los retos y temas contemporáneos.\n  </StyledWho>\n);\n\nexport default Who;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport GatsbyImage from 'gatsby-image';\n\nconst StyledFeatured = styled.section``;\n\nconst Featured = () => {\n  const {\n    markdownRemark: { html, frontmatter },\n  } = useStaticQuery(graphql`\n    {\n      markdownRemark(fileInfo: { sourceInstanceName: { eq: \"featured\" } }) {\n        frontmatter {\n          title\n          url\n          image {\n            childImageSharp {\n              fixed(quality: 100, height: 500) {\n                ...GatsbyImageSharpFixed_withWebp\n              }\n              fluid(quality: 100) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n        html\n      }\n    }\n  `);\n  return (\n    <StyledFeatured>\n      <a href={frontmatter.url} target={'_blank'} rel={'noopener noreferrer'}>\n        <GatsbyImage\n          fixed={frontmatter.image.childImageSharp.fixed}\n          alt={frontmatter.title}\n        />\n      </a>\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n    </StyledFeatured>\n  );\n};\n\nexport default Featured;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Grid from '../Grid';\n\nconst LatestProjects = () => {\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: { fileInfo: { sourceInstanceName: { eq: \"projects\" } } }\n        sort: { fields: frontmatter___title, order: ASC }\n        limit: 6\n      ) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              title\n              image {\n                childImageSharp {\n                  fixed(quality: 95, width: 410, height: 300) {\n                    ...GatsbyImageSharpFixed_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <Grid\n      items={edges.map((x) => ({\n        uri: `/projects/${x.node.frontmatter.slug}`,\n        title: x.node.frontmatter.title,\n        image: x.node.frontmatter.image.childImageSharp.fixed,\n      }))}\n    />\n  );\n};\n\nexport default LatestProjects;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Section from '../components/Section';\n\nimport Featured from '../components/home/Featured';\nimport LatestProjects from '../components/home/LatestProjects';\nimport Who from '../components/home/Who';\nimport Team from '../components/home/Team';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Inicio\" />\n    <Section id={'featured'} title={'Destacamos...'}>\n      <Featured />\n    </Section>\n    <Section id={'quienes-somos'} title={'La Periférica Cultura Contemporánea'}>\n      <Who />\n      <Link to={'/who'}>Conócenos mejor...</Link>\n    </Section>\n    <Section id={'latest-projects'} title={'Últimos Proyectos'}>\n      <LatestProjects />\n    </Section>\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nconst StyledItem = styled.div`\n  position: relative;\n  text-align: left;\n  .gatsby-image-wrapper {\n    display: block !important;\n  }\n  .gatsby-image-wrapper,\n  img {\n    margin-bottom: 0;\n  }\n  box-shadow: 0 0 0.3rem rgba(0, 0, 0, 0.3);\n  .image {\n    overflow: hidden;\n    a {\n      display: block;\n      &:hover {\n        transform: scale(1.2) rotate(5deg);\n      }\n    }\n  }\n  .title {\n    position: absolute;\n    bottom: -1rem;\n    right: 0.5rem;\n    background: rgba(255, 255, 255, 1);\n    padding: 0.7rem 1rem 1.5rem;\n    box-shadow: 0 -0.2rem 0.2rem rgba(0, 0, 0, 0.2);\n    a {\n      text-transform: uppercase;\n      color: var(--primary-color);\n      text-decoration: none;\n      font-size: 1.4rem;\n    }\n\n    small {\n      text-align: right;\n      display: block;\n      color: gray;\n    }\n  }\n`;\n\nconst Item = ({ uri, image, title, date }) => (\n  <StyledItem>\n    <div className={'image'}>\n      <Link to={uri}>\n        <GatsbyImage\n          objectFit={'cover'}\n          objectPosition={'100% 0'}\n          width={'100%'}\n          height={'100%'}\n          maxHeight={'25rem'}\n          fixed={image}\n          alt={title}\n        />\n      </Link>\n    </div>\n    <div className={'title'}>\n      <Link to={uri}>{title}</Link>\n      {date && <small>{date}</small>}\n    </div>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  uri: PropTypes.string,\n  image: PropTypes.object,\n  title: PropTypes.string,\n  date: PropTypes.string,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledGrid = styled.section`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(410px, 410px));\n  grid-gap: 1.5rem;\n  justify-content: center;\n  justify-items: center;\n`;\n\nconst Grid = ({ items }) => (\n  <StyledGrid>\n    {items.map((x, idx) => (\n      <div key={idx}>\n        <Item {...x} />\n      </div>\n    ))}\n  </StyledGrid>\n);\n\nGrid.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.object.isRequired,\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      text: PropTypes.string,\n    })\n  ),\n};\n\nexport default Grid;\n","import Grid from './Grid';\nexport default Grid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title, home }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={\n        home ? site.siteMetadata.title : `%s | ${site.siteMetadata.title}`\n      }\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'es',\n  meta: [],\n  description: '',\n  home: false,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  home: PropTypes.bool,\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledAnchor = styled.a`\n  display: block;\n  position: relative;\n  top: -100px;\n  visibility: hidden;\n`;\n\nconst Anchor = ({ id }) => <StyledAnchor id={id} />;\n\nAnchor.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Anchor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Anchor from './Anchor';\n\nconst StyledSection = styled.section`\n  padding: 1.5rem;\n  max-width: 1280px;\n  margin: 0 auto;\n  text-align: center;\n  h2 {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Section = ({ children, id, title }) => (\n  <StyledSection>\n    <Anchor id={id} />\n    <h2>{title}</h2>\n    {children}\n  </StyledSection>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default Section;\n"],"sourceRoot":""}