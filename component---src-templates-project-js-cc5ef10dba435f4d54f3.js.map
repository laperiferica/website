{"version":3,"sources":["webpack:///./src/templates/project.js","webpack:///./src/components/MarkedHeading.jsx"],"names":["StyledProjectPage","styled","article","injectIntl","intl","data","markdownRemark","frontmatter","html","title","programs","length","className","formatMessage","id","map","x","idx","key","to","slug","dangerouslySetInnerHTML","__html","gallery","items","thumbnail","image","fixed","full","fluid","pageQuery","StyledMarkedHeading","h2","props","color","bg","MarkerHeading","children","defaultProps"],"mappings":"gRAaMA,EAAoBC,IAAOC,QAAV,6EAAGD,CAAH,sGAoFRE,gCAxEK,SAAC,GAAD,IAClBC,EADkB,EAClBA,KADkB,IAElBC,KACEC,eAAkBC,EAHF,EAGEA,YAAaC,EAHf,EAGeA,KAHf,OAMlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOF,EAAYE,QACxB,kBAAC,IAAD,KACE,kBAACT,EAAD,KACE,gCACE,kBAAC,IAAD,KAAgBO,EAAYE,QAG7BF,EAAYG,UAAYH,EAAYG,SAASC,OAAS,GACrD,yBAAKC,UAAW,YACbR,EAAKS,cAAc,CAAEC,GAAI,2BAA6B,IACtDP,EAAYG,SAASK,KAAI,SAACC,EAAGC,GAAJ,OACxB,kBAAC,OAAD,CAAMC,IAAKD,EAAKE,GAAE,aAAeH,EAAET,YAAYa,MAC5CJ,EAAET,YAAYE,WAMvB,yBAAKY,wBAAyB,CAAEC,OAAQd,KAEvCD,EAAYgB,SACX,kBAAC,IAAD,CACEC,MAAOjB,EAAYgB,QAAQR,KAAI,SAACC,GAAD,MAAQ,CACrCP,MAAOO,EAAEP,MACTgB,UAAWT,EAAEU,MAAMD,UAAUE,MAC7BC,KAAMZ,EAAEU,MAAME,KAAKC,YAKzB,wBAAIjB,UAAW,SACZR,EAAKS,cAAc,CAAEC,GAAI,mCAE5B,kBAAC,IAAD,YAkCD,IAAMgB,EAAS,c,kCCnGtB,yBAIMC,EAJN,UAI4B9B,EAAO+B,GAAV,yFAAG/B,CAAH,sSAMd,SAACgC,GAAD,OAAWA,EAAMC,SAWpB,SAACD,GAAD,sBAA2BA,EAAME,GAAjC,aACA,SAACF,GAAD,sBAA2BA,EAAME,GAAjC,aAMFC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUF,EAAb,EAAaA,GAAID,EAAjB,EAAiBA,MAAjB,OACpB,kBAACH,EAAD,CAAqBI,GAAIA,EAAID,MAAOA,GACjCG,IAULD,EAAcE,aAAe,CAC3BH,GAAI,SACJD,MAAO,SAGME","file":"component---src-templates-project-js-cc5ef10dba435f4d54f3.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { injectIntl, Link } from 'gatsby-plugin-intl';\n\nimport Layout from '../components/Layout';\nimport Container from '../components/Container';\nimport Share from '../components/Share';\nimport Gallery from '../components/Gallery';\nimport SEO from '../components/SEO';\nimport MarkerHeading from '../components/MarkedHeading';\n\nconst StyledProjectPage = styled.article`\n  max-width: 900px;\n  margin: 0 auto;\n  h4.gallery,\n  h4.share {\n    margin-top: 3rem;\n  }\n  .programs {\n    text-align: center;\n  }\n`;\n\nconst ProjectPage = ({\n  intl,\n  data: {\n    markdownRemark: { frontmatter, html },\n  },\n}) => (\n  <Layout>\n    <SEO title={frontmatter.title} />\n    <Container>\n      <StyledProjectPage>\n        <center>\n          <MarkerHeading>{frontmatter.title}</MarkerHeading>\n        </center>\n\n        {frontmatter.programs && frontmatter.programs.length > 0 && (\n          <div className={'programs'}>\n            {intl.formatMessage({ id: 'Inside of the program:' })}{' '}\n            {frontmatter.programs.map((x, idx) => (\n              <Link key={idx} to={`/programs/${x.frontmatter.slug}`}>\n                {x.frontmatter.title}\n              </Link>\n            ))}\n          </div>\n        )}\n\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n\n        {frontmatter.gallery && (\n          <Gallery\n            items={frontmatter.gallery.map((x) => ({\n              title: x.title,\n              thumbnail: x.image.thumbnail.fixed,\n              full: x.image.full.fluid,\n            }))}\n          />\n        )}\n\n        <h4 className={'share'}>\n          {intl.formatMessage({ id: 'Share on your social networks' })}\n        </h4>\n        <Share />\n      </StyledProjectPage>\n    </Container>\n  </Layout>\n);\n\nProjectPage.propTypes = {\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func,\n  }),\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        programs: PropTypes.arrayOf(\n          PropTypes.shape({\n            slug: PropTypes.string,\n            title: PropTypes.srtring,\n          })\n        ),\n        gallery: PropTypes.arrayOf(\n          PropTypes.shape({\n            title: PropTypes.string,\n            image: PropTypes.object,\n          })\n        ),\n      }),\n      html: PropTypes.string,\n    }),\n  }),\n};\n\nexport default injectIntl(ProjectPage);\n\nexport const pageQuery = graphql`\n  query($slug: String, $language: String) {\n    markdownRemark(\n      frontmatter: { slug: { eq: $slug }, lang: { eq: $language } }\n      fileInfo: { sourceInstanceName: { eq: \"projects\" } }\n    ) {\n      frontmatter {\n        slug\n        title\n        programs {\n          frontmatter {\n            slug\n            title\n          }\n        }\n        gallery {\n          title\n          image {\n            thumbnail: childImageSharp {\n              fixed(quality: 95, width: 250, height: 250) {\n                ...GatsbyImageSharpFixed_withWebp\n              }\n            }\n            full: childImageSharp {\n              fluid(quality: 95) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n      html\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledMarkedHeading = styled.h2`\n  display: inline-block;\n  position: relative;\n  padding: 0.5rem 0.6rem 0.1rem;\n  // TODO Avoid using important\n  margin-bottom: 6rem !important;\n  color: ${(props) => props.color};\n  &::before {\n    content: ' ';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: -1;\n    background-image: linear-gradient(\n      to right,\n      ${(props) => `var(--marked-${props.bg}-color)`} 0,\n      ${(props) => `var(--marked-${props.bg}-color)`} 100%\n    );\n    transform: rotate(0.4deg) skew(-10deg);\n  }\n`;\n\nconst MarkerHeading = ({ children, bg, color }) => (\n  <StyledMarkedHeading bg={bg} color={color}>\n    {children}\n  </StyledMarkedHeading>\n);\n\nMarkerHeading.propTypes = {\n  children: PropTypes.node,\n  bg: PropTypes.oneOf(['yellow', 'green']),\n  color: PropTypes.oneOf(['white', 'black']),\n};\n\nMarkerHeading.defaultProps = {\n  bg: 'yellow',\n  color: 'black',\n};\n\nexport default MarkerHeading;\n"],"sourceRoot":""}