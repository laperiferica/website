{"version":3,"sources":["webpack:///./src/components/BiLink.jsx","webpack:///./src/components/Persons/Item.jsx","webpack:///./src/components/Persons/Persons.jsx","webpack:///./src/components/Persons/index.js","webpack:///./data/static/meta.js","webpack:///./src/components/Social.jsx","webpack:///./src/pages/contact.js","webpack:///./src/components/contact/Team.jsx","webpack:///./src/components/SEO.jsx","webpack:///./src/components/Anchor.jsx","webpack:///./src/components/Section.jsx"],"names":["BiLink","url","children","startsWith","href","target","rel","to","StyledItem","styled","li","Item","uri","image","name","tasks","email","fixed","alt","map","x","idx","key","StyledPersons","ul","Persons","items","social","icon","title","StyledSocial","props","size","color","Social","meta","aria-label","defaultProps","ContactPage","Layout","SEO","Section","id","Team","edges","allMarkdownRemark","node","frontmatter","slug","childImageSharp","description","lang","home","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","content","property","author","concat","StyledAnchor","a","Anchor","StyledSection","section"],"mappings":"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","file":"component---src-pages-contact-js-cf572a1ba78bec41c21d.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst BiLink = ({ url, children }) =>\n  url.startsWith('http') ? (\n    <a href={url} target={'_blank'} rel={'noopener noreferrer'}>\n      {children}\n    </a>\n  ) : (\n    <Link to={url}>{children}</Link>\n  );\n\nBiLink.propTypes = {\n  url: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default BiLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\n\nimport BiLink from '../BiLink';\n\nconst StyledItem = styled.li`\n  .gatsby-image-wrapper {\n    border-radius: 50%;\n  }\n  > ul {\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    > li {\n      padding: 0;\n    }\n  }\n`;\n\nconst Item = ({ uri, image, name, tasks, email }) => (\n  <StyledItem>\n    <BiLink url={uri}>\n      <GatsbyImage fixed={image} alt={`Foto de ${name}`} />\n    </BiLink>\n    <BiLink url={uri}>\n      <h3>{name}</h3>\n    </BiLink>\n    {tasks && (\n      <ul>\n        {tasks.map((x, idx) => (\n          <li key={idx}>{x}</li>\n        ))}\n      </ul>\n    )}\n    <p>{email}</p>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  uri: PropTypes.string,\n  image: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  tasks: PropTypes.array,\n  email: PropTypes.string,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledPersons = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  > li {\n    padding: 1.5rem;\n  }\n`;\n\nconst Persons = ({ items }) => (\n  <StyledPersons>\n    {items.map((x, idx) => (\n      <Item key={idx} {...x} />\n    ))}\n  </StyledPersons>\n);\n\nPersons.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      uri: PropTypes.string,\n      image: PropTypes.object.isRequired,\n      name: PropTypes.string.isRequired,\n      tasks: PropTypes.array,\n      email: PropTypes.string,\n    })\n  ),\n};\n\nexport default Persons;\n","import Persons from './Persons';\nexport default Persons;\n","import React from 'react';\nimport { FaYoutube, FaTwitter, FaInstagram, FaFacebook } from 'react-icons/fa';\n\nexport default {\n  email: 'info.laperiferica@gmail.com',\n  social: [\n    {\n      url: 'https://www.youtube.com/channel/UCo0LamWRwdLSfO3o_Ob3-WQ',\n      icon: <FaYoutube />,\n      title: 'Youtube',\n    },\n    {\n      url: 'https://twitter.com/LaPerifericaCC',\n      icon: <FaTwitter />,\n      title: 'Twitter',\n    },\n    {\n      url: 'https://www.instagram.com/LaPerifericaCC/',\n      icon: <FaInstagram />,\n      title: 'Instagram',\n    },\n    {\n      url: 'https://www.facebook.com/LaPerifericaCC/',\n      icon: <FaFacebook />,\n      title: 'Facebook',\n    },\n  ],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport meta from '../../data/static/meta';\n\nconst StyledSocial = styled.ul`\n  display: flex;\n  max-width: 400px;\n  margin: 2rem auto 0;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n  font-size: ${(props) => props.size}rem;\n  a {\n    color: ${(props) => props.color};\n  }\n`;\n\nconst Social = ({ size, color }) => (\n  <StyledSocial size={size} color={color}>\n    {meta.social.map((x, idx) => (\n      <li key={idx}>\n        <a\n          href={x.url}\n          target={'_blank'}\n          rel={'noopener noreferrer'}\n          aria-label={x.title}\n        >\n          {x.icon}\n        </a>\n      </li>\n    ))}\n  </StyledSocial>\n);\n\nSocial.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string,\n};\n\nSocial.defaultProps = {\n  size: 1,\n  color: 'black',\n};\n\nexport default Social;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Section from '../components/Section';\nimport Social from '../components/Social';\n\nimport Team from '../components/contact/Team';\n\nimport meta from '../../data/static/meta';\n\nconst ContactPage = () => (\n  <Layout>\n    <SEO title=\"Contact\" />\n    <Section id={'email'} title={'Email'}>\n      <a\n        href={`mailto:${meta.email}`}\n        target={'_blank'}\n        rel={'noopener noreferrer'}\n      >\n        {meta.email}\n      </a>\n    </Section>\n    <Section id={'team-contact'} title={'Team Contact'}>\n      <Team />\n    </Section>\n    <Section id={'social'} title={'Redes sociales'}>\n      <Social size={4} />\n    </Section>\n  </Layout>\n);\n\nexport default ContactPage;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Persons from '../Persons';\n\nconst Team = () => {\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: { fileInfo: { sourceInstanceName: { eq: \"team\" } } }\n        sort: { fields: frontmatter___name, order: ASC }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              name\n              tasks\n              email\n              social {\n                linkedin\n                twitter\n                facebook\n              }\n              image {\n                childImageSharp {\n                  fixed(quality: 95, width: 200) {\n                    ...GatsbyImageSharpFixed_withWebp\n                  }\n                }\n              }\n            }\n            html\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <Persons\n      items={edges.map((x) => ({\n        uri: `/who/team/${x.node.frontmatter.slug}`,\n        name: x.node.frontmatter.name,\n        image: x.node.frontmatter.image.childImageSharp.fixed,\n        tasks: x.node.frontmatter.tasks,\n        email: x.node.frontmatter.email,\n      }))}\n    />\n  );\n};\n\nexport default Team;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title, home }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={\n        home ? site.siteMetadata.title : `%s | ${site.siteMetadata.title}`\n      }\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'es',\n  meta: [],\n  description: '',\n  home: false,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  home: PropTypes.bool,\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledAnchor = styled.a`\n  display: block;\n  position: relative;\n  top: -100px;\n  visibility: hidden;\n`;\n\nconst Anchor = ({ id }) => <StyledAnchor id={id} />;\n\nAnchor.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Anchor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Anchor from './Anchor';\n\nconst StyledSection = styled.section`\n  padding: 1.5rem;\n  max-width: 1280px;\n  margin: 0 auto;\n  text-align: center;\n  h2 {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Section = ({ children, id, title }) => (\n  <StyledSection>\n    <Anchor id={id} />\n    <h2>{title}</h2>\n    {children}\n  </StyledSection>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default Section;\n"],"sourceRoot":""}