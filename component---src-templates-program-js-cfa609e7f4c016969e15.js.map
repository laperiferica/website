{"version":3,"sources":["webpack:///./src/templates/program.js","webpack:///./src/components/Grid/Item.jsx","webpack:///./src/components/Grid/Grid.jsx","webpack:///./src/components/Grid/index.js"],"names":["StyledProgramPage","styled","article","ProgramPage","data","markdownRemark","frontmatter","html","title","dangerouslySetInnerHTML","__html","className","projects","length","items","map","x","uri","slug","image","childImageSharp","fixed","pageQuery","StyledItem","div","Item","date","to","objectFit","objectPosition","width","height","maxHeight","alt","StyledGrid","section","Grid","idx","key"],"mappings":"wPAWMA,EAAoBC,IAAOC,QAAV,iFAAGD,CAAH,6IAoERE,UApDK,SAAC,GAAD,QAClBC,KACEC,eAAkBC,EAFF,EAEEA,YAAaC,EAFf,EAEeA,KAFf,OAKlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOF,EAAYE,QACxB,kBAAC,IAAD,KACE,kBAACR,EAAD,KACE,4BAAKM,EAAYE,OACjB,yBAAKC,wBAAyB,CAAEC,OAAQH,KAExC,wBAAII,UAAW,SAAf,4BACA,kBAAC,IAAD,OAEEL,EAAYM,UAAYN,EAAYM,SAASC,QAAU,GACvD,yBAAKF,UAAW,YACd,gDACA,kBAAC,IAAD,CACEG,MAAOR,EAAYM,SAASG,KAAI,SAACC,GAAD,MAAQ,CACtCC,IAAI,aAAcD,EAAEV,YAAYY,KAChCV,MAAOQ,EAAEV,YAAYE,MACrBW,MAAOH,EAAEV,YAAYa,MAAMC,gBAAgBC,iBAgCpD,IAAMC,EAAS,a,wGC3EhBC,EAAatB,IAAOuB,IAAV,mEAAGvB,CAAH,qiBAuEDwB,EA7BF,SAAC,GAAD,IAAGR,EAAH,EAAGA,IAAKE,EAAR,EAAQA,MAAOX,EAAf,EAAeA,MAAOkB,EAAtB,EAAsBA,KAAtB,OACX,kBAACH,EAAD,KACE,yBAAKZ,UAAW,SACd,kBAAC,OAAD,CAAMgB,GAAIV,GACR,kBAAC,IAAD,CACEW,UAAW,QACXC,eAAgB,SAChBC,MAAO,OACPC,OAAQ,OACRC,UAAW,QACXX,MAAOF,EACPc,IAAKzB,MAIX,yBAAKG,UAAW,SACd,kBAAC,OAAD,CAAMgB,GAAIV,GAAMT,GACfkB,GAAQ,+BAAQA,MC3DjBQ,EAAajC,IAAOkC,QAAV,uEAAGlC,CAAH,wJA+BDmC,EAtBF,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAH,OACX,kBAACoB,EAAD,KACGpB,EAAMC,KAAI,SAACC,EAAGqB,GAAJ,OACT,yBAAKC,IAAKD,GACR,kBAAC,EAASrB,SClBHoB","file":"component---src-templates-program-js-cfa609e7f4c016969e15.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport Container from '../components/Container';\nimport Share from '../components/Share';\nimport SEO from '../components/SEO';\nimport Grid from '../components/Grid';\n\nconst StyledProgramPage = styled.article`\n  text-align: justify;\n  max-width: 900px;\n  margin: 0 auto;\n  h2 {\n    text-align: center;\n  }\n  h4.gallery,\n  h4.share {\n    margin-top: 3rem;\n  }\n  .projects {\n    margin-top: 2rem;\n  }\n`;\n\nconst ProgramPage = ({\n  data: {\n    markdownRemark: { frontmatter, html },\n  },\n}) => (\n  <Layout>\n    <SEO title={frontmatter.title} />\n    <Container>\n      <StyledProgramPage>\n        <h2>{frontmatter.title}</h2>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n\n        <h4 className={'share'}>Comparte en tus redes...</h4>\n        <Share />\n\n        {(frontmatter.projects && frontmatter.projects.length) > 0 && (\n          <div className={'projects'}>\n            <h2>Related Projects</h2>\n            <Grid\n              items={frontmatter.projects.map((x) => ({\n                uri: `/projects/${x.frontmatter.slug}`,\n                title: x.frontmatter.title,\n                image: x.frontmatter.image.childImageSharp.fixed,\n              }))}\n            />\n          </div>\n        )}\n      </StyledProgramPage>\n    </Container>\n  </Layout>\n);\n\nProgramPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        projects: PropTypes.arrayOf(\n          PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              slug: PropTypes.string,\n              title: PropTypes.string,\n              image: PropTypes.object,\n            }),\n          })\n        ),\n      }),\n      html: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ProgramPage;\n\nexport const pageQuery = graphql`\n  query($slug: String) {\n    markdownRemark(\n      frontmatter: { slug: { eq: $slug } }\n      fileInfo: { sourceInstanceName: { eq: \"programs\" } }\n    ) {\n      frontmatter {\n        title\n        projects {\n          frontmatter {\n            slug\n            title\n            image {\n              childImageSharp {\n                fixed(quality: 95, width: 410, height: 300) {\n                  ...GatsbyImageSharpFixed_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n      html\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\nimport { Link } from 'gatsby-plugin-intl';\n\nconst StyledItem = styled.div`\n  position: relative;\n  text-align: left;\n  .gatsby-image-wrapper {\n    display: block !important;\n  }\n  .gatsby-image-wrapper,\n  img {\n    margin-bottom: 0;\n  }\n  box-shadow: 0 0 0.3rem rgba(0, 0, 0, 0.3);\n  .image {\n    overflow: hidden;\n    a {\n      display: block;\n      &:hover {\n        transform: scale(1.2) rotate(5deg);\n      }\n    }\n  }\n  .title {\n    position: absolute;\n    bottom: -1rem;\n    right: 0.5rem;\n    background: rgba(255, 255, 255, 1);\n    padding: 0.7rem 1rem 1.5rem;\n    box-shadow: 0 -0.2rem 0.2rem rgba(0, 0, 0, 0.2);\n    a {\n      text-transform: uppercase;\n      color: var(--primary-color);\n      text-decoration: none;\n      font-size: 1.4rem;\n    }\n\n    small {\n      text-align: right;\n      display: block;\n      color: gray;\n    }\n  }\n`;\n\nconst Item = ({ uri, image, title, date }) => (\n  <StyledItem>\n    <div className={'image'}>\n      <Link to={uri}>\n        <GatsbyImage\n          objectFit={'cover'}\n          objectPosition={'100% 0'}\n          width={'100%'}\n          height={'100%'}\n          maxHeight={'25rem'}\n          fixed={image}\n          alt={title}\n        />\n      </Link>\n    </div>\n    <div className={'title'}>\n      <Link to={uri}>{title}</Link>\n      {date && <small>{date}</small>}\n    </div>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  uri: PropTypes.string,\n  image: PropTypes.object,\n  title: PropTypes.string,\n  date: PropTypes.string,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledGrid = styled.section`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(410px, 410px));\n  grid-gap: 1.5rem;\n  justify-content: center;\n  justify-items: center;\n`;\n\nconst Grid = ({ items }) => (\n  <StyledGrid>\n    {items.map((x, idx) => (\n      <div key={idx}>\n        <Item {...x} />\n      </div>\n    ))}\n  </StyledGrid>\n);\n\nGrid.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.object.isRequired,\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      text: PropTypes.string,\n    })\n  ),\n};\n\nexport default Grid;\n","import Grid from './Grid';\nexport default Grid;\n"],"sourceRoot":""}