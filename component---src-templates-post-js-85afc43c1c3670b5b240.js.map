{"version":3,"sources":["webpack:///./src/components/Tags.jsx","webpack:///./src/templates/post.js"],"names":["StyledTags","styled","div","injectIntl","items","intl","formatMessage","id","map","x","idx","key","to","reduce","acc","cur","concat","length","StyledPostPage","article","pageQuery","data","markdownRemark","frontmatter","html","Layout","SEO","title","Container","className","date","dangerouslySetInnerHTML","__html","gallery","Gallery","thumbnail","image","fixed","full","fluid","tags","Share"],"mappings":"gkCAKA,IAAMA,EAAaC,IAAOC,IAAV,uEAAGD,CAAH,MA6BDE,wBA3BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACXD,GACE,kBAACJ,EAAD,KACGK,EAAKC,cAAc,CAAEC,GAAI,SAD5B,IACwC,IACrCH,EACEI,KAAI,SAACC,EAAGC,GAAJ,OACH,kBAAC,OAAD,CAAMC,IAAKD,EAAKE,GAAE,eAAiBH,GAChCA,MAGJI,QACC,SAACC,EAAKC,EAAKL,GAAX,MACE,YAAII,GAAJ,CAASC,IAAKC,OACZN,EAAMN,EAAMa,OAAS,EAAI,CAAC,0BAAMN,KAAMD,EAAM,GAAlB,OAAkC,MAEhE,QCTJQ,EAAiBjB,IAAOkB,QAAV,2EAAGlB,CAAH,2IAgFPmB,GAFEjB,gCA9DE,SAAC,GAAD,IACfE,EADe,EACfA,KADe,IAEfgB,KACEC,eAAkBC,EAHL,EAGKA,YAAaC,EAHlB,EAGkBA,KAHlB,OAMf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAOJ,EAAYI,QACxB,kBAACC,EAAA,EAAD,KACE,kBAACV,EAAD,KACE,4BAAKK,EAAYI,OAEjB,yBAAKE,UAAW,QACbxB,EAAKC,cAAc,CAAEC,GAAI,iBAD5B,IACgDgB,EAAYO,MAG5D,yBAAKC,wBAAyB,CAAEC,OAAQR,KAEvCD,EAAYU,SACX,kBAACC,EAAA,EAAD,CACE9B,MAAOmB,EAAYU,QAAQzB,KAAI,SAACC,GAAD,MAAQ,CACrCkB,MAAOlB,EAAEkB,MACTQ,UAAW1B,EAAE2B,MAAMD,UAAUE,MAC7BC,KAAM7B,EAAE2B,MAAME,KAAKC,YAKzB,kBAAC,EAAD,CAAMnC,MAAOmB,EAAYiB,OAEzB,wBAAIX,UAAW,SACZxB,EAAKC,cAAc,CAAEC,GAAI,mCAE5B,kBAACkC,EAAA,EAAD,YA+Bc","file":"component---src-templates-post-js-85afc43c1c3670b5b240.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { injectIntl, Link } from 'gatsby-plugin-intl';\n\nconst StyledTags = styled.div``;\n\nconst Tags = ({ items, intl }) =>\n  items && (\n    <StyledTags>\n      {intl.formatMessage({ id: 'Tags' })}:{' '}\n      {items\n        .map((x, idx) => (\n          <Link key={idx} to={`/posts/tags/${x}`}>\n            {x}\n          </Link>\n        ))\n        .reduce(\n          (acc, cur, idx) =>\n            [...acc, cur].concat(\n              idx < items.length - 1 ? [<span key={-idx - 1}>, </span>] : []\n            ),\n          []\n        )}\n    </StyledTags>\n  );\n\nTags.propTypes = {\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func,\n  }),\n  items: PropTypes.array,\n};\n\nexport default injectIntl(Tags);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { injectIntl } from 'gatsby-plugin-intl';\n\nimport Layout from '../components/Layout';\nimport Container from '../components/Container';\nimport Share from '../components/Share';\nimport Gallery from '../components/Gallery';\nimport SEO from '../components/SEO';\nimport Tags from '../components/Tags';\n\nconst StyledPostPage = styled.article`\n  text-align: justify;\n  max-width: 900px;\n  margin: 0 auto;\n  h2 {\n    text-align: center;\n  }\n  h4.gallery,\n  h4.share {\n    margin-top: 3rem;\n  }\n  .meta {\n    text-align: center;\n  }\n`;\n\nconst PostPage = ({\n  intl,\n  data: {\n    markdownRemark: { frontmatter, html },\n  },\n}) => (\n  <Layout>\n    <SEO title={frontmatter.title} />\n    <Container>\n      <StyledPostPage>\n        <h2>{frontmatter.title}</h2>\n\n        <div className={'meta'}>\n          {intl.formatMessage({ id: 'Published on' })} {frontmatter.date}\n        </div>\n\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n\n        {frontmatter.gallery && (\n          <Gallery\n            items={frontmatter.gallery.map((x) => ({\n              title: x.title,\n              thumbnail: x.image.thumbnail.fixed,\n              full: x.image.full.fluid,\n            }))}\n          />\n        )}\n\n        <Tags items={frontmatter.tags} />\n\n        <h4 className={'share'}>\n          {intl.formatMessage({ id: 'Share on your social networks' })}\n        </h4>\n        <Share />\n      </StyledPostPage>\n    </Container>\n  </Layout>\n);\n\nPostPage.propTypes = {\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func,\n  }),\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        image: PropTypes.object,\n        title: PropTypes.string,\n        date: PropTypes.string,\n        tags: PropTypes.array,\n        gallery: PropTypes.arrayOf(\n          PropTypes.shape({\n            title: PropTypes.string,\n            image: PropTypes.object,\n          })\n        ),\n      }),\n      html: PropTypes.string,\n    }),\n  }),\n};\n\nexport default injectIntl(PostPage);\n\nexport const pageQuery = graphql`\n  query($slug: String, $language: String) {\n    markdownRemark(\n      frontmatter: { slug: { eq: $slug }, lang: { eq: $language } }\n      fileInfo: { sourceInstanceName: { eq: \"posts\" } }\n    ) {\n      frontmatter {\n        slug\n        title\n        tags\n        gallery {\n          title\n          image {\n            thumbnail: childImageSharp {\n              fixed(quality: 95, width: 250, height: 250, fit: INSIDE) {\n                ...GatsbyImageSharpFixed_withWebp\n              }\n            }\n            full: childImageSharp {\n              fluid(quality: 95) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n        date(formatString: \"d/M/YYYY\")\n      }\n      html\n    }\n  }\n`;\n"],"sourceRoot":""}