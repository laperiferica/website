{"version":3,"sources":["webpack:///./src/components/index/Contact.jsx","webpack:///./src/components/index/Who.jsx","webpack:///./src/components/index/Team/Member.jsx","webpack:///./src/components/index/Team/Team.jsx","webpack:///./src/components/index/Team/index.js","webpack:///./src/components/index/Projects/Item.jsx","webpack:///./src/components/index/Projects/Projects.jsx","webpack:///./src/components/index/Projects/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/SEO.jsx"],"names":["data","email","social","url","icon","size","StyledContact","styled","section","Contact","Container","id","href","map","x","idx","key","target","rel","StyledWho","Who","StyledMember","div","Member","image","name","tasks","fixed","childImageSharp","alt","StyledTeam","Team","edges","allMarkdownRemark","node","frontmatter","StyledItem","Item","title","content","fluid","dangerouslySetInnerHTML","__html","StyledProjects","Projects","html","IndexPage","Layout","SEO","description","lang","meta","home","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-f98c0f5ffa1ff12eae33.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport Container from '../Container';\nimport { FaYoutube, FaTwitter, FaInstagram, FaFacebook } from 'react-icons/fa';\n\nconst data = {\n  email: 'info.laperiferica@gmail.com',\n  social: [\n    {\n      url: 'https://www.youtube.com/channel/UCo0LamWRwdLSfO3o_Ob3-WQ',\n      icon: <FaYoutube size={54} />,\n    },\n    {\n      url: 'https://twitter.com/LaPerifericaCC',\n      icon: <FaTwitter size={54} />,\n    },\n    {\n      url: 'https://www.instagram.com/LaPerifericaCC/',\n      icon: <FaInstagram size={54} />,\n    },\n    {\n      url: 'https://www.facebook.com/LaPerifericaCC/',\n      icon: <FaFacebook size={54} />,\n    },\n  ],\n};\n\nconst StyledContact = styled.section`\n  margin: 1rem 0;\n  text-align: center;\n  ul {\n    display: flex;\n    max-width: 400px;\n    margin: 2rem auto 0;\n    justify-content: space-between;\n  }\n`;\n\nconst Contact = () => (\n  <Container id={'contacta'}>\n    <StyledContact>\n      <h2>Contacta</h2>\n      <a href={`mailto:${data.email}`}>{data.email}</a>\n      <ul>\n        {data.social.map((x, idx) => (\n          <a\n            key={idx}\n            href={x.url}\n            target={'_blank'}\n            rel={'noopener noreferrer'}\n          >\n            {x.icon}\n          </a>\n        ))}\n      </ul>\n    </StyledContact>\n  </Container>\n);\n\nexport default Contact;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Container from '../Container';\n\nconst StyledWho = styled.section`\n  margin: 1rem 0;\n  text-align: center;\n  p {\n    text-align: center;\n  }\n`;\n\nconst Who = () => (\n  <Container id={'quienes-somos'}>\n    <StyledWho>\n      <h2>Quienes somos</h2>\n      <p>\n        LA PERIFÉRICA - Cultura Contemporánea es un Colectivo de Gestorxs\n        Culturales almerienses que busca poner en valor la vida cultural de la\n        ciudad y de la provincia desde una visión innovadora, apoyando y\n        fomentando el talento local, el intercambio y la cooperación\n        internacional y sobre todo la implicación y participación ciudadana a\n        través de proyectos artísticos y culturales que promuevan la reflexión\n        de los retos y temas contemporáneos.\n        <br />\n        Uno de nuestros ámbitos de trabajo son los proyectos internacionales\n        como los que realizamos a través del programa europeo Erasmus +.\n      </p>\n    </StyledWho>\n  </Container>\n);\n\nexport default Who;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\n\nconst StyledMember = styled.div`\n  > ul {\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    > li {\n      padding: 0;\n    }\n  }\n`;\n\nconst Member = ({ image, name, tasks }) => (\n  <StyledMember>\n    <GatsbyImage fixed={image.childImageSharp.fixed} alt={`Foto de ${name}`} />\n    <h3>{name}</h3>\n    <ul>\n      {tasks.map((x, idx) => (\n        <li key={idx}>{x}</li>\n      ))}\n    </ul>\n  </StyledMember>\n);\n\nMember.propTypes = {\n  image: PropTypes.object,\n  name: PropTypes.string,\n  tasks: PropTypes.array\n};\n\nexport default Member;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Container from '../../Container';\nimport Member from './Member';\n\nconst StyledTeam = styled.section`\n  margin: 1rem 0;\n  text-align: center;\n  > ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    > li {\n      padding: 1.5rem;\n    }\n  }\n`;\n\nconst Team = () => {\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: { fileInfo: { sourceInstanceName: { eq: \"team\" } } }\n        sort: { fields: frontmatter___name, order: ASC }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              name\n              tasks\n              social {\n                linkedin\n                twitter\n                facebook\n              }\n              image {\n                childImageSharp {\n                  fixed(quality: 95, width: 200) {\n                    ...GatsbyImageSharpFixed_withWebp\n                  }\n                }\n              }\n            }\n            html\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <Container id={'equipo'}>\n      <StyledTeam>\n        <h2>Equipo</h2>\n        <ul>\n          {edges\n            .map((x) => x.node)\n            .map((x, idx) => (\n              <li key={idx}>\n                <Member\n                  name={x.frontmatter.name}\n                  image={x.frontmatter.image}\n                  tasks={x.frontmatter.tasks}\n                />\n              </li>\n            ))}\n        </ul>\n      </StyledTeam>\n    </Container>\n  );\n};\n\nexport default Team;\n","import Team from './Team';\nexport default Team;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\n\nconst StyledItem = styled.div`\n  > ul {\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    > li {\n      padding: 0;\n    }\n  }\n`;\n\nconst Item = ({ image, title, content }) => (\n  <StyledItem>\n    <GatsbyImage fluid={image.childImageSharp.fluid} alt={title} />\n    <h3>{title}</h3>\n    <div dangerouslySetInnerHTML={{ __html: content }} />\n  </StyledItem>\n);\n\nItem.propTypes = {\n  image: PropTypes.object,\n  title: PropTypes.string,\n  content: PropTypes.node,\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Container from '../../Container';\nimport Item from './Item';\n\nconst StyledProjects = styled.section`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n  grid-gap: 2rem;\n  justify-items: center;\n`;\n\nconst Projects = () => {\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: { fileInfo: { sourceInstanceName: { eq: \"projects\" } } }\n        sort: { fields: frontmatter___title, order: ASC }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              title\n              image {\n                childImageSharp {\n                  fluid(quality: 95) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n            html\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <Container id={'proyectos'}>\n      <h2>Proyectos</h2>\n      <StyledProjects>\n        {edges\n          .map((x) => x.node)\n          .map((x, idx) => (\n            <div key={idx}>\n              <Item\n                title={x.frontmatter.title}\n                image={x.frontmatter.image}\n                content={x.html}\n              />\n            </div>\n          ))}\n      </StyledProjects>\n    </Container>\n  );\n};\n\nexport default Projects;\n","import Projects from './Projects';\nexport default Projects;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Contact from '../components/index/Contact';\nimport Who from '../components/index/Who';\nimport Team from '../components/index/Team';\nimport Projects from '../components/index/Projects';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Inicio\" />\n    <Projects />\n    <Who />\n    <Team />\n    <Contact />\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title, home }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={\n        home ? site.siteMetadata.title : `%s | ${site.siteMetadata.title}`\n      }\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'es',\n  meta: [],\n  description: '',\n  home: false,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  home: PropTypes.bool,\n};\n\nexport default SEO;\n"],"sourceRoot":""}