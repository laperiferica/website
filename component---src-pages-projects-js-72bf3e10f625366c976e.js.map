{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/Grid/Item.jsx","webpack:///./src/components/Grid/Grid.jsx","webpack:///./src/components/Grid/index.js","webpack:///./src/components/Anchor.jsx","webpack:///./src/components/Section.jsx"],"names":["injectIntl","intl","edges","projects","title","formatMessage","id","items","map","x","uri","node","frontmatter","slug","image","childImageSharp","fixed","StyledItem","styled","div","Item","date","className","to","alt","StyledGrid","section","props","align","Grid","idx","key","defaultProps","StyledAnchor","a","Anchor","StyledSection","Section","children"],"mappings":"gNA6DeA,gCAnDM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAERC,EAFmB,OAE/BC,SAAYD,MA2Bd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAOH,EAAKI,cAAc,CAAEC,GAAI,eACrC,kBAAC,IAAD,CAASA,GAAI,WAAYF,MAAOH,EAAKI,cAAc,CAAEC,GAAI,cACvD,kBAAC,IAAD,CACEC,MAAOL,EAAMM,KAAI,SAACC,GAAD,MAAQ,CACvBC,IAAI,aAAcD,EAAEE,KAAKC,YAAYC,KACrCT,MAAOK,EAAEE,KAAKC,YAAYR,MAC1BU,MAAOL,EAAEE,KAAKC,YAAYE,MAAMC,gBAAgBC,kB,irNCzCtDC,EAAaC,IAAOC,IAAV,mEAAGD,CAAH,2hBAmEDE,EArBF,SAAC,GAAD,IAAGV,EAAH,EAAGA,IAAKI,EAAR,EAAQA,MAAOV,EAAf,EAAeA,MAAOiB,EAAtB,EAAsBA,KAAtB,OACX,kBAACJ,EAAD,KACE,yBAAKK,UAAW,SACd,kBAAC,OAAD,CAAMC,GAAIb,GACR,kBAAC,IAAD,CAAaM,MAAOF,EAAOU,IAAKpB,MAGpC,yBAAKkB,UAAW,SACd,kBAAC,OAAD,CAAMC,GAAIb,GAAMN,GACfiB,GAAQ,+BAAQA,MCvDjBI,EAAaP,IAAOQ,QAAV,uEAAGR,CAAH,mJAKK,SAACS,GAAD,OAAWA,EAAMC,SAIhCC,EAAO,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAOqB,EAAV,EAAUA,MAAV,OACX,kBAACH,EAAD,CAAYG,MAAOA,GAChBrB,EAAMC,KAAI,SAACC,EAAGqB,GAAJ,OACT,yBAAKC,IAAKD,GACR,kBAAC,EAASrB,SAmBlBoB,EAAKG,aAAe,CAClBJ,MAAO,UAGMC,QCzCAA,O,uECGTI,EAAef,IAAOgB,EAAV,0EAAGhB,CAAH,mEAaHiB,EANA,SAAC,GAAD,IAAG7B,EAAH,EAAGA,GAAH,OAAY,kBAAC2B,EAAD,CAAc3B,GAAIA,KCLvC8B,EAAgBlB,IAAOQ,QAAV,yEAAGR,CAAH,6FAwBJmB,IAdC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUhC,EAAb,EAAaA,GAAIF,EAAjB,EAAiBA,MAAjB,OACd,kBAACgC,EAAD,KACE,kBAAC,EAAD,CAAQ9B,GAAIA,IACZ,4BAAKF,GACJkC","file":"component---src-pages-projects-js-72bf3e10f625366c976e.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { injectIntl } from 'gatsby-plugin-intl';\n\nimport Grid from '../components/Grid';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Section from '../components/Section';\n\nconst ProjectsPage = ({ intl }) => {\n  const {\n    projects: { edges },\n  } = useStaticQuery(graphql`\n    {\n      projects: allMarkdownRemark(\n        filter: { fileInfo: { sourceInstanceName: { eq: \"projects\" } } }\n        sort: { fields: frontmatter___title, order: ASC }\n        limit: 6\n      ) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              title\n              image {\n                childImageSharp {\n                  fixed(quality: 95, width: 300, height: 250) {\n                    ...GatsbyImageSharpFixed_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Layout>\n      <SEO title={intl.formatMessage({ id: 'Projects' })} />\n      <Section id={'projects'} title={intl.formatMessage({ id: 'Projects' })}>\n        <Grid\n          items={edges.map((x) => ({\n            uri: `/projects/${x.node.frontmatter.slug}`,\n            title: x.node.frontmatter.title,\n            image: x.node.frontmatter.image.childImageSharp.fixed,\n          }))}\n        />\n      </Section>\n    </Layout>\n  );\n};\n\nProjectsPage.propTypes = {\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func,\n  }),\n};\n\nexport default injectIntl(ProjectsPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\nimport { Link } from 'gatsby-plugin-intl';\n\nconst StyledItem = styled.div`\n  position: relative;\n  text-align: left;\n  .gatsby-image-wrapper {\n    display: block !important;\n  }\n  .gatsby-image-wrapper,\n  img {\n    margin-bottom: 0;\n  }\n  box-shadow: 0 0 0.3rem rgba(0, 0, 0, 0.3);\n  .image {\n    overflow: hidden;\n    a {\n      display: block;\n      &:hover {\n        transform: scale(1.2) rotate(5deg);\n      }\n      &::after {\n        display: none;\n      }\n    }\n  }\n  .title {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.7);\n    padding: 0.7rem;\n    box-shadow: 0 -0.2rem 0.2rem rgba(0, 0, 0, 0.2);\n    a {\n      text-transform: uppercase;\n      color: white;\n      text-decoration: none;\n      font-size: 1.2rem;\n    }\n\n    small {\n      text-align: right;\n      display: block;\n      color: gray;\n    }\n  }\n`;\n\nconst Item = ({ uri, image, title, date }) => (\n  <StyledItem>\n    <div className={'image'}>\n      <Link to={uri}>\n        <GatsbyImage fixed={image} alt={title} />\n      </Link>\n    </div>\n    <div className={'title'}>\n      <Link to={uri}>{title}</Link>\n      {date && <small>{date}</small>}\n    </div>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  uri: PropTypes.string,\n  image: PropTypes.object,\n  title: PropTypes.string,\n  date: PropTypes.string,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledGrid = styled.section`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 300px));\n  grid-gap: 2rem;\n  justify-content: ${(props) => props.align};\n  justify-items: center;\n`;\n\nconst Grid = ({ items, align }) => (\n  <StyledGrid align={align}>\n    {items.map((x, idx) => (\n      <div key={idx}>\n        <Item {...x} />\n      </div>\n    ))}\n  </StyledGrid>\n);\n\nGrid.propTypes = {\n  align: PropTypes.string,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.object.isRequired,\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      text: PropTypes.string,\n    })\n  ),\n};\n\nGrid.defaultProps = {\n  align: 'center',\n};\n\nexport default Grid;\n","import Grid from './Grid';\nexport default Grid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledAnchor = styled.a`\n  display: block;\n  position: relative;\n  top: -100px;\n  visibility: hidden;\n`;\n\nconst Anchor = ({ id }) => <StyledAnchor id={id} />;\n\nAnchor.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Anchor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Anchor from './Anchor';\n\nconst StyledSection = styled.section`\n  padding: 1.5rem;\n  max-width: 1280px;\n  margin: 0 auto;\n  text-align: center;\n  h2 {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Section = ({ children, id, title }) => (\n  <StyledSection>\n    <Anchor id={id} />\n    <h2>{title}</h2>\n    {children}\n  </StyledSection>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default Section;\n"],"sourceRoot":""}