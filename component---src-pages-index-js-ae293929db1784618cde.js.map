{"version":3,"sources":["webpack:///./src/components/home/Who.jsx","webpack:///./src/components/home/Featured.jsx","webpack:///./src/components/home/LatestProjects.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/Grid/Item.jsx","webpack:///./src/components/Grid/Grid.jsx","webpack:///./src/components/Grid/index.js","webpack:///./src/components/Anchor.jsx","webpack:///./src/components/Section.jsx"],"names":["StyledWho","styled","section","Who","StyledFeatured","Featured","markdownRemark","html","frontmatter","href","url","target","rel","fixed","image","childImageSharp","alt","title","dangerouslySetInnerHTML","__html","LatestProjects","edges","allMarkdownRemark","Grid","items","map","x","uri","node","slug","injectIntl","intl","Layout","SEO","formatMessage","id","Section","to","StyledItem","div","Item","date","className","StyledGrid","props","align","idx","key","defaultProps","StyledAnchor","a","Anchor","StyledSection","children"],"mappings":"u6GAAA,yBAGMA,EAHN,UAGkBC,EAAOC,QAAV,qEAAGD,CAAH,sCAgBAE,IAXH,kBACV,kBAACH,EAAD,ga,uLCJII,EAAiBH,IAAOC,QAAV,6EAAGD,CAAH,kCA6CLI,EArCE,WAAO,IAAD,SAEnBC,eAAkBC,EAFC,EAEDA,KAAMC,EAFL,EAEKA,YAsB1B,OACE,kBAACJ,EAAD,KACE,uBAAGK,KAAMD,EAAYE,IAAKC,OAAQ,SAAUC,IAAK,uBAC/C,kBAAC,IAAD,CACEC,MAAOL,EAAYM,MAAMC,gBAAgBF,MACzCG,IAAKR,EAAYS,SAGrB,yBAAKC,wBAAyB,CAAEC,OAAQZ,O,wBCD/Ba,EAvCQ,WAAO,IAELC,EAFI,OAEzBC,kBAAqBD,MA0BvB,OACE,kBAACE,EAAA,EAAD,CACEC,MAAOH,EAAMI,KAAI,SAACC,GAAD,MAAQ,CACvBC,IAAI,aAAcD,EAAEE,KAAKpB,YAAYqB,KACrCZ,MAAOS,EAAEE,KAAKpB,YAAYS,MAC1BH,MAAOY,EAAEE,KAAKpB,YAAYM,MAAMC,gBAAgBF,a,YCDzCiB,gCAzBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKhB,MAAOc,EAAKG,cAAc,CAAEC,GAAI,WACrC,kBAACC,EAAA,EAAD,CAASD,GAAI,WAAYlB,MAAOc,EAAKG,cAAc,CAAEC,GAAI,kBACvD,kBAAC,EAAD,OAEF,kBAACC,EAAA,EAAD,CAASD,GAAI,gBAAiBlB,MAAO,uCACnC,kBAACd,EAAA,EAAD,MACA,kBAAC,OAAD,CAAMkC,GAAI,QAAV,uBAEF,kBAACD,EAAA,EAAD,CACED,GAAI,kBACJlB,MAAOc,EAAKG,cAAc,CAAEC,GAAI,qBAEhC,kBAAC,EAAD,Y,wGCpBAG,EAAarC,IAAOsC,IAAV,mEAAGtC,CAAH,2hBAmEDuC,EArBF,SAAC,GAAD,IAAGb,EAAH,EAAGA,IAAKb,EAAR,EAAQA,MAAOG,EAAf,EAAeA,MAAOwB,EAAtB,EAAsBA,KAAtB,OACX,kBAACH,EAAD,KACE,yBAAKI,UAAW,SACd,kBAAC,OAAD,CAAML,GAAIV,GACR,kBAAC,IAAD,CAAad,MAAOC,EAAOE,IAAKC,MAGpC,yBAAKyB,UAAW,SACd,kBAAC,OAAD,CAAML,GAAIV,GAAMV,GACfwB,GAAQ,+BAAQA,MCvDjBE,EAAa1C,IAAOC,QAAV,uEAAGD,CAAH,mJAKK,SAAC2C,GAAD,OAAWA,EAAMC,SAIhCtB,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOqB,EAAV,EAAUA,MAAV,OACX,kBAACF,EAAD,CAAYE,MAAOA,GAChBrB,EAAMC,KAAI,SAACC,EAAGoB,GAAJ,OACT,yBAAKC,IAAKD,GACR,kBAAC,EAASpB,SAmBlBH,EAAKyB,aAAe,CAClBH,MAAO,UAGMtB,QCzCAA,O,ypNCGT0B,EAAehD,IAAOiD,EAAV,0EAAGjD,CAAH,mEAaHkD,EANA,SAAC,GAAD,IAAGhB,EAAH,EAAGA,GAAH,OAAY,kBAACc,EAAD,CAAcd,GAAIA,KCLvCiB,EAAgBnD,IAAOC,QAAV,yEAAGD,CAAH,6FAwBJmC,IAdC,SAAC,GAAD,IAAGiB,EAAH,EAAGA,SAAUlB,EAAb,EAAaA,GAAIlB,EAAjB,EAAiBA,MAAjB,OACd,kBAACmC,EAAD,KACE,kBAAC,EAAD,CAAQjB,GAAIA,IACZ,4BAAKlB,GACJoC","file":"component---src-pages-index-js-ae293929db1784618cde.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledWho = styled.section`\n  margin: 1rem 0;\n  text-align: center;\n`;\n\nconst Who = () => (\n  <StyledWho>\n    Somos un Colectivo de Gestorxs Culturales almerienses que busca poner en\n    valor la vida cultural de la ciudad y de la provincia desde una visión\n    innovadora, apoyando y fomentando el talento local, el intercambio y la\n    cooperación internacional y sobre todo la implicación y participación\n    ciudadana a través de proyectos artísticos y culturales que promuevan la\n    reflexión de los retos y temas contemporáneos.\n  </StyledWho>\n);\n\nexport default Who;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport GatsbyImage from 'gatsby-image';\n\nconst StyledFeatured = styled.section`\n  > a {\n    &::after {\n      display: none;\n    }\n  }\n`;\n\nconst Featured = () => {\n  const {\n    markdownRemark: { html, frontmatter },\n  } = useStaticQuery(graphql`\n    {\n      markdownRemark(fileInfo: { sourceInstanceName: { eq: \"featured\" } }) {\n        frontmatter {\n          title\n          url\n          image {\n            childImageSharp {\n              fixed(quality: 100, height: 310) {\n                ...GatsbyImageSharpFixed_withWebp\n              }\n              fluid(quality: 100) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n        html\n      }\n    }\n  `);\n  return (\n    <StyledFeatured>\n      <a href={frontmatter.url} target={'_blank'} rel={'noopener noreferrer'}>\n        <GatsbyImage\n          fixed={frontmatter.image.childImageSharp.fixed}\n          alt={frontmatter.title}\n        />\n      </a>\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n    </StyledFeatured>\n  );\n};\n\nexport default Featured;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Grid from '../Grid';\n\nconst LatestProjects = () => {\n  const {\n    allMarkdownRemark: { edges },\n  } = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: { fileInfo: { sourceInstanceName: { eq: \"projects\" } } }\n        sort: { fields: frontmatter___title, order: ASC }\n        limit: 6\n      ) {\n        edges {\n          node {\n            frontmatter {\n              slug\n              title\n              image {\n                childImageSharp {\n                  fixed(quality: 95, width: 300, height: 250) {\n                    ...GatsbyImageSharpFixed_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <Grid\n      items={edges.map((x) => ({\n        uri: `/projects/${x.node.frontmatter.slug}`,\n        title: x.node.frontmatter.title,\n        image: x.node.frontmatter.image.childImageSharp.fixed,\n      }))}\n    />\n  );\n};\n\nexport default LatestProjects;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, Link } from 'gatsby-plugin-intl';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Section from '../components/Section';\n\nimport Featured from '../components/home/Featured';\nimport LatestProjects from '../components/home/LatestProjects';\nimport Who from '../components/home/Who';\n\nconst IndexPage = ({ intl }) => (\n  <Layout>\n    <SEO title={intl.formatMessage({ id: 'Home' })} />\n    <Section id={'featured'} title={intl.formatMessage({ id: 'Stand out...' })}>\n      <Featured />\n    </Section>\n    <Section id={'quienes-somos'} title={'La Periférica Cultura Contemporánea'}>\n      <Who />\n      <Link to={'/who'}>Conócenos mejor...</Link>\n    </Section>\n    <Section\n      id={'latest-projects'}\n      title={intl.formatMessage({ id: 'Latest Projects' })}\n    >\n      <LatestProjects />\n    </Section>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func,\n  }),\n};\n\nexport default injectIntl(IndexPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GatsbyImage from 'gatsby-image';\nimport { Link } from 'gatsby-plugin-intl';\n\nconst StyledItem = styled.div`\n  position: relative;\n  text-align: left;\n  .gatsby-image-wrapper {\n    display: block !important;\n  }\n  .gatsby-image-wrapper,\n  img {\n    margin-bottom: 0;\n  }\n  box-shadow: 0 0 0.3rem rgba(0, 0, 0, 0.3);\n  .image {\n    overflow: hidden;\n    a {\n      display: block;\n      &:hover {\n        transform: scale(1.2) rotate(5deg);\n      }\n      &::after {\n        display: none;\n      }\n    }\n  }\n  .title {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.7);\n    padding: 0.7rem;\n    box-shadow: 0 -0.2rem 0.2rem rgba(0, 0, 0, 0.2);\n    a {\n      text-transform: uppercase;\n      color: white;\n      text-decoration: none;\n      font-size: 1.2rem;\n    }\n\n    small {\n      text-align: right;\n      display: block;\n      color: gray;\n    }\n  }\n`;\n\nconst Item = ({ uri, image, title, date }) => (\n  <StyledItem>\n    <div className={'image'}>\n      <Link to={uri}>\n        <GatsbyImage fixed={image} alt={title} />\n      </Link>\n    </div>\n    <div className={'title'}>\n      <Link to={uri}>{title}</Link>\n      {date && <small>{date}</small>}\n    </div>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  uri: PropTypes.string,\n  image: PropTypes.object,\n  title: PropTypes.string,\n  date: PropTypes.string,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledGrid = styled.section`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 300px));\n  grid-gap: 2rem;\n  justify-content: ${(props) => props.align};\n  justify-items: center;\n`;\n\nconst Grid = ({ items, align }) => (\n  <StyledGrid align={align}>\n    {items.map((x, idx) => (\n      <div key={idx}>\n        <Item {...x} />\n      </div>\n    ))}\n  </StyledGrid>\n);\n\nGrid.propTypes = {\n  align: PropTypes.string,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.object.isRequired,\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      text: PropTypes.string,\n    })\n  ),\n};\n\nGrid.defaultProps = {\n  align: 'center',\n};\n\nexport default Grid;\n","import Grid from './Grid';\nexport default Grid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledAnchor = styled.a`\n  display: block;\n  position: relative;\n  top: -100px;\n  visibility: hidden;\n`;\n\nconst Anchor = ({ id }) => <StyledAnchor id={id} />;\n\nAnchor.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Anchor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Anchor from './Anchor';\n\nconst StyledSection = styled.section`\n  padding: 1.5rem;\n  max-width: 1280px;\n  margin: 0 auto;\n  text-align: center;\n  h2 {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Section = ({ children, id, title }) => (\n  <StyledSection>\n    <Anchor id={id} />\n    <h2>{title}</h2>\n    {children}\n  </StyledSection>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default Section;\n"],"sourceRoot":""}